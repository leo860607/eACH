/*
Script generated by Aqua Data Studio 7.0.4 on May-29-2015 03:40:07 PM
Database: EACH
Schema: EACHUSER
Objects: PROCEDURE
*/
CREATE OR REPLACE PROCEDURE "EACHUSER"."BAT_RPCLEARFEETAB" ()
	LANGUAGE SQL
BEGIN
	Declare sPhase VARCHAR(10);
    Declare sBizDATE VARCHAR(10);
    Declare sPREVDATE VARCHAR(10);
    --SET sPhase = 0;
	SET sBizDATE = (SELECT THISDATE FROM EACHUSER.EACHSYSSTATUSTAB);
    SET sPhase = (SELECT	(case when ClearingPhase='01' then '02' else '01' end) FROM	EACHUSER.EACHSYSSTATUSTAB);    
    SET sPREVDATE = (SELECT PREVDATE FROM EACHUSER.EACHSYSSTATUSTAB);
	
	CALL EACHUSER.MAN_RPCLEARFEETAB(sBizDATE, sPhase);

	
END
GO
CREATE OR REPLACE PROCEDURE "EACHUSER"."BAT_RPDAILYSUM" ()
	LANGUAGE SQL
BEGIN
	Declare sPhase VARCHAR(10);
    Declare sPREVDATE VARCHAR(10);
    Declare sBIZDATE VARCHAR(10);
     Declare sDATEMODE VARCHAR(10);

SET (sBIZDATE, sPREVDATE, sPhase , sDATEMODE ) = 
        (SELECT THISDATE, PREVDATE, (case when ClearingPhase='01' then '02' else '01' end), DATEMODE
         FROM EACHUSER.EACHSYSSTATUSTAB);
--SET sBIZDATE = '20150225';
--SET sPREVDATE = '20150224';
--SET sPhase = '01';    

	CALL EACHUSER.MAN_RPDAILYSUM(sBIZDATE, sPhase);

	
END
GO
CREATE OR REPLACE PROCEDURE "EACHUSER"."BAT_RPMONTHSUM" ()
	LANGUAGE SQL
BEGIN
	Declare sDATEMODE VARCHAR(2);  --營業日是否已經換日
    Declare startDATE VARCHAR(10);  --上個月的 startDATE
	Declare endDATE VARCHAR(10);    --上個月的 endDATE
    Declare begDATE VARCHAR(10);    --查詢營業日檔的begin Date
    Declare sBIZDATE VARCHAR(10);
    Declare sMonFirstDate VARCHAR(10);
    
    SET (sBIZDATE,sDATEMODE) = (SELECT THISDATE, DATEMODE FROM EACHUSER.EACHSYSSTATUSTAB);
	
	CALL EACHUSER.MAN_RPMONTHSUM(sBIZDATE, '02');
	
	
END
GO
CREATE OR REPLACE PROCEDURE "EACHUSER"."BAT_RPONBLOCKTAB" ()
	LANGUAGE SQL
BEGIN
	Declare sPhase VARCHAR(10);
    Declare sBizDATE VARCHAR(10);
    Declare sPREVDATE VARCHAR(10);
    Declare OnBlock_CNT VARCHAR(10);
    Declare OnPending_CNT VARCHAR(10);
    --SET sPhase = 0;
	SET sBizDATE = (SELECT THISDATE FROM EACHUSER.EACHSYSSTATUSTAB);
    SET sPhase = (SELECT	(case when ClearingPhase='01' then '02' else '01' end) FROM	EACHUSER.EACHSYSSTATUSTAB);   
    SET sPREVDATE = (SELECT PREVDATE FROM EACHUSER.EACHSYSSTATUSTAB);
	
	CALL EACHUSER.MAN_RPONBLOCKTAB(sBizDATE, sPhase);
	
	
END
GO
CREATE OR REPLACE PROCEDURE "EACHUSER"."BAT_RPONCLEARINGTAB" ()
	LANGUAGE SQL
BEGIN
	Declare sPhase VARCHAR(10);
    Declare sBizDATE VARCHAR(10);
    Declare sPREVDATE VARCHAR(10);
    Declare sTOTAL_RECVCNT VARCHAR(10);
    Declare sTOTAL_RECVAMT VARCHAR(16);
    Declare sTOTAL_PAYCNT VARCHAR(10); 
    Declare sTOTAL_PAYAMT VARCHAR(16);
    Declare sTOTAL_RVSRECVCNT VARCHAR(10);
    Declare sTOTAL_RVSRECVAMT VARCHAR(16);
    Declare sTOTAL_RVSPAYCNT VARCHAR(10);
    Declare sTOTAL_RVSPAYAMT VARCHAR(16);
    Declare sNote VARCHAR(300);
    --SET sPhase = 0;
	SET sBizDATE = (SELECT THISDATE FROM EACHUSER.EACHSYSSTATUSTAB);
    SET sPhase = (SELECT	(case when ClearingPhase='01' then '02' else '01' end) FROM	EACHUSER.EACHSYSSTATUSTAB);    
    SET sPREVDATE = (SELECT PREVDATE FROM EACHUSER.EACHSYSSTATUSTAB);
	
	CALL EACHUSER.MAN_RPONCLEARINGTAB(sBizDATE, sPhase);

	
END
GO
CREATE OR REPLACE PROCEDURE "EACHUSER"."MAKEWK_ALLDATE" (IN iTwYear INTEGER) LANGUAGE SQL
BEGIN
	DECLARE cTwYear         VARCHAR(4)	DEFAULT '';
    DECLARE iWestYear		INTEGER		DEFAULT 0;
	DECLARE westDate		CHAR(10)	DEFAULT '';
	DECLARE twDate			CHAR(10)	DEFAULT '';
	DECLARE dayOfWeek		INTEGER		DEFAULT 1;
    DECLARE cIS_TXN_DATE	CHAR(1)		DEFAULT 'Y';
 
    --民國年 yyyy
    SET cTwYear = RTRIM(CAST(CAST(iTwYear AS CHAR(4)) AS VARCHAR(4)));
    SET cTwYear = REPEAT('0', 4 - LENGTH(cTwYear)) || cTwYear;
    --民國年轉西元年 yyyy
    SET iWestYear = iTwYear + 1911;
    --初始化西元年
    SET westDate = CAST(iWestYear AS CHAR(4)) || '-01-01';
    --初始化民國年
    SET twDate = cTwYear || SUBSTR(westDate,6,2) || SUBSTR(westDate,9,2);
    
    WHILE(iWestYear = YEAR(westDate)) DO
    	SET dayOfWeek = DAYOFWEEK_ISO(westDate);
    
    	IF (dayOfWeek = 6 OR dayOfWeek = 7)
    	THEN SET cIS_TXN_DATE = 'N';
    	ELSE SET cIS_TXN_DATE = 'Y';
		END IF;
		
    	INSERT INTO "EACHUSER".WK_DATE_CALENDAR ( TXN_DATE ,WEEKDAY, IS_TXN_DATE ,CDATE ) Values (twDate , dayOfWeek, cIS_TXN_DATE , CURRENT_DATE);
        
        --SET westDate = CAST(DATE(westDate) + 1 DAY AS CHAR(10));
        SET westDate = VARCHAR_FORMAT(DATE(westDate) + 1 DAY, 'YYYY-MM-DD');
        SET twDate = cTwYear || SUBSTR(westDate,6,2) || SUBSTR(westDate,9,2);
	END WHILE;
END
GO
CREATE OR REPLACE PROCEDURE "EACHUSER"."MAN_RPCLEARFEETAB" (in sBizDATE varchar(10), in sPhase varchar(2))
	LANGUAGE SQL
BEGIN
	--Declare sPhase VARCHAR(10);
    --Declare sBizDATE VARCHAR(10);
    --Declare sPREVDATE VARCHAR(10);
    --SET sPhase = 0;
	--SET sBizDATE = (SELECT THISDATE FROM EACHUSER.EACHSYSSTATUSTAB);
    --SET sPhase = (SELECT	(case when ClearingPhase='01' then '02' else '01' end) FROM	EACHUSER.EACHSYSSTATUSTAB);    
    --SET sPREVDATE = (SELECT PREVDATE FROM EACHUSER.EACHSYSSTATUSTAB);

    --20150523 edit by PU
    --Call EACHUSER.UPD_EACH_BATCH_STATUS(sBizDATE, sPhase ,'BAT_RPCLEARFEETAB', 'P', '' );
    CALL EACHUSER.UPD_EACH_BATCH_STATUS(sBizDATE, sPhase ,'BAT_RPCLEARFEETAB', 'P');

Delete EACHUSER.RPCLEARFEETAB Where BizDATE=sBizDATE and CLEARINGPHASE =sPhase ;
--本期的結算資料收費檔
INSERT INTO EACHUSER.RPCLEARFEETAB(BIZDATE, CLEARINGPHASE,YYYYMM, TXN_ID, BUSINESS_TYPE_ID, BRBK_ID, BGBK_ID, SENDERID, OP_TYPE, CNT, AMT, RVSCNT, RVSAMT) 
select 
       BIZDATE
        ,CLEARINGPHASE
        ,substr(BIZDATE,1,6) YYYYMM
        ,TXN_ID
        ,(select BUSINESS_TYPE_ID from EACHUSER.TXN_CODE where TXN_ID=X.TXN_ID) BUSINESS_TYPE_ID
        ,BRBK_ID
         ,EACHUSER.GETBKHEADID(BRBK_ID) BGBK_ID
         ,SENDERID
        ,OP_TYPE 
        ,CNT
        , AMT
        , RVSCNT
        , RVSAMT
from (
     --扣款行手續費 (+應收; -應付)  
    (select   coalesce(C.BIZDATE ,D.BIZDATE) BIZDATE
        ,coalesce(C.CLEARINGPHASE ,D.CLEARINGPHASE) CLEARINGPHASE
        ,coalesce(C.TXN_ID ,D.TXN_ID) TXN_ID
        ,coalesce(C.BRBK_ID ,D.BRBK_ID) BRBK_ID
         ,coalesce(C.SENDERID ,D.SENDERID) SENDERID
        ,coalesce(C.OP_TYPE ,D.OP_TYPE) OP_TYPE 
        ,coalesce(CNT,0) CNT
        ,coalesce(AMT,0) AMT
        ,coalesce(RVSCNT,0) RVSCNT
        ,coalesce(RVSAMT,0)  RVSAMT
from 
(
SELECT
       BIZDATE
       ,CLEARINGPHASE
        ,TXID TXN_ID
        ,OUTBANKID BRBK_ID
         ,SENDERID
         ,'O' OP_TYPE
        ,Count(*)  CNT
        ,SUM (NEWOUTFEE) AMT
    FROM
        EACHUSER.VW_ONBLOCKTAB 
    Where NEWRESULT != 'R'  and SENDERSTATUS != '1' and CLEARINGPHASE=sPhase and BIZDATE=sBizDATE
    Group by     BIZDATE , CLEARINGPHASE ,  TXID ,OUTBANKID ,SENDERID
    ) C
    FULL OUTER JOIN
    (SELECT
        NEWBIZDATE BIZDATE
        ,NEWCLRPHASE CLEARINGPHASE
        ,TXID TXN_ID
        ,OUTBANKID BRBK_ID
         ,SENDERID
          ,'O' OP_TYPE
        ,Count(*)  RVSCNT
        ,SUM (NEWOUTFEE)  RVSAMT
    FROM
        EACHUSER.VW_ONPENDING_EC
    Where NEWBIZDATE=sBizDATE and NEWCLRPHASE=sPhase 
    Group by  NEWBIZDATE , NEWCLRPHASE , TXID , OUTBANKID ,SENDERID
    ) D on D.BIZDATE=C.BIZDATE and D.CLEARINGPHASE=C.CLEARINGPHASE and D.TXN_ID=C.TXN_ID and D.BRBK_ID=C.BRBK_ID and D.SENDERID=C.SENDERID
)
Union All
     --入帳行手續費 (+應收; -應付)
   (select coalesce(A.BIZDATE ,B.BIZDATE) BIZDATE
        ,coalesce(A.CLEARINGPHASE ,B.CLEARINGPHASE) CLEARINGPHASE
        ,coalesce(A.TXN_ID ,B.TXN_ID) TXN_ID
        ,coalesce(A.BRBK_ID ,B.BRBK_ID) BRBK_ID
         ,coalesce(A.SENDERID ,B.SENDERID) SENDERID
        ,coalesce(A.OP_TYPE ,B.OP_TYPE) OP_TYPE 
        ,coalesce(CNT,0) CNT
        ,coalesce(AMT,0) AMT
        ,coalesce(RVSCNT,0) RVSCNT
        ,coalesce(RVSAMT,0)  RVSAMT
    from 
    (SELECT
        BIZDATE
       ,CLEARINGPHASE
        ,TXID TXN_ID
        ,INBANKID BRBK_ID
        ,SENDERID
        ,'I' OP_TYPE
        ,Count(*) CNT
        ,SUM (NEWINFEE) AMT
    FROM
        EACHUSER.VW_ONBLOCKTAB 
    Where NEWRESULT != 'R' and SENDERSTATUS != '1' and CLEARINGPHASE=sPhase and BIZDATE=sBizDATE
    Group by     BIZDATE , CLEARINGPHASE , TXID , INBANKID,SENDERID
    ) A
    FULL OUTER JOIN
    (SELECT
        NEWBIZDATE BIZDATE
        ,NEWCLRPHASE CLEARINGPHASE
        ,TXID TXN_ID
        ,INBANKID BRBK_ID
        ,SENDERID
  ,'I' OP_TYPE
        ,Count(*) RVSCNT
        ,SUM (NEWINFEE) RVSAMT
    FROM
        EACHUSER.VW_ONPENDING_EC
    Where NEWBIZDATE=sBizDATE and NEWCLRPHASE=sPhase
    Group by     NEWBIZDATE , NEWCLRPHASE , TXID , INBANKID,SENDERID
    ) B on B.BIZDATE=A.BIZDATE and B.CLEARINGPHASE=A.CLEARINGPHASE and B.TXN_ID=A.TXN_ID and B.BRBK_ID=A.BRBK_ID and B.SENDERID=A.SENDERID
)
Union ALL
     --發動行手續費及?正(+應收; -應付)
   (select coalesce(A.BIZDATE ,B.BIZDATE) BIZDATE
        ,coalesce(A.CLEARINGPHASE ,B.CLEARINGPHASE) CLEARINGPHASE
        ,coalesce(A.TXN_ID ,B.TXN_ID) TXN_ID
        ,coalesce(A.BRBK_ID ,B.BRBK_ID) BRBK_ID
         ,coalesce(A.SENDERID ,B.SENDERID) SENDERID
        ,coalesce(A.OP_TYPE ,B.OP_TYPE) OP_TYPE 
        ,coalesce(CNT,0) CNT
        ,coalesce(AMT,0) AMT
        ,coalesce(RVSCNT,0) RVSCNT
        ,coalesce(RVSAMT,0)  RVSAMT
    from 
    (SELECT
        BIZDATE
       ,CLEARINGPHASE
        ,TXID TXN_ID
        ,SENDERBANKID BRBK_ID
        ,SENDERID
        ,'S' OP_TYPE
        ,Count(*) CNT
        ,SUM (NEWSENDERFEE) AMT
    FROM
        EACHUSER.VW_ONBLOCKTAB 
    Where NEWRESULT != 'R'  and SENDERSTATUS != '1' and CLEARINGPHASE=sPhase and BIZDATE=sBizDATE
    Group by     BIZDATE , CLEARINGPHASE , TXID , SENDERBANKID,SENDERID ) A
    FULL OUTER JOIN
    (SELECT
        NEWBIZDATE BIZDATE
        ,NEWCLRPHASE CLEARINGPHASE
        ,TXID TXN_ID
        ,SENDERBANKID BRBK_ID
        ,SENDERID
  ,'S' OP_TYPE
        ,Count(*) RVSCNT
        ,SUM (NEWSENDERFEE) RVSAMT
    FROM
        EACHUSER.VW_ONPENDING_EC
    Where NEWBIZDATE=sBizDATE and NEWCLRPHASE=sPhase 
    Group by     NEWBIZDATE , NEWCLRPHASE , TXID , SENDERBANKID,SENDERID ) B on B.BIZDATE=A.BIZDATE and B.CLEARINGPHASE=A.CLEARINGPHASE and B.TXN_ID=A.TXN_ID and B.BRBK_ID=A.BRBK_ID and B.SENDERID=A.SENDERID
 )
 )  X Where  not  (CNT =0 And  AMT =0 And RVSCNT =0 And RVSAMT =0 )
;
--補齊欄位
UPDATE EACHUSER.RPCLEARFEETAB AS A SET
BRBK_NAME = (SELECT BRBK_NAME FROM EACHUSER.BANK_BRANCH WHERE BRBK_ID = A.BRBK_ID),
BGBK_NAME = (SELECT BGBK_NAME FROM EACHUSER.BANK_GROUP WHERE BGBK_ID = A.BGBK_ID),
OPBK_ID = (SELECT OPBK_ID FROM EACHUSER.BANK_GROUP WHERE BGBK_ID = A.BGBK_ID),
OPBK_NAME = (SELECT OP.BGBK_NAME FROM EACHUSER.BANK_GROUP BG LEFT JOIN EACHUSER.BANK_GROUP OP ON BG.OPBK_ID = OP.BGBK_ID WHERE BG.BGBK_ID = A.BGBK_ID),
TXN_NAME = (SELECT TXN_NAME FROM EACHUSER.TXN_CODE WHERE TXN_ID = A.TXN_ID),
COMPANY_ABBR_NAME = (
    SELECT COALESCE(COMPANY_ABBR_NAME,'')
    FROM (
        SELECT COMPANY_ID, TXN_ID, SND_BRBK_ID, COMPANY_ABBR_NAME 
        FROM EACHUSER.SC_COMPANY_PROFILE
        UNION
        SELECT COMPANY_ID, TXN_ID, SND_BRBK_ID, COMPANY_ABBR_NAME 
        FROM EACHUSER.SD_COMPANY_PROFILE
    )
    WHERE COMPANY_ID = A.SENDERID AND TXN_ID = A.TXN_ID AND SND_BRBK_ID = A.BRBK_ID
    --20150923 edit by hugo 因是SD+SC 故有可能出現多筆資料 ，如出現多筆原則上取第一筆
    FETCH FIRST 1 ROWS ONLY
),
BUSINESS_TYPE_NAME = (SELECT BUSINESS_TYPE_NAME FROM EACHUSER.BUSINESS_TYPE WHERE BUSINESS_TYPE_ID = A.BUSINESS_TYPE_ID)
WHERE A.CLEARINGPHASE = sPhase AND A.BIZDATE = sBizDATE;
commit;

    --20150523 edit by PU
    --Call EACHUSER.UPD_EACH_BATCH_STATUS(sBizDATE, sPhase ,'BAT_RPCLEARFEETAB', 'S' , '' );
    CALL EACHUSER.UPD_EACH_BATCH_STATUS(sBizDATE, sPhase ,'BAT_RPCLEARFEETAB', 'S');
END
GO



CREATE  PROCEDURE EACHUSER.MAN_RPDAILYSUM (in sBizDATE varchar(10), in sPhase varchar(2))
	LANGUAGE SQL
BEGIN
	--Declare sPhase VARCHAR(10);
    Declare sPREVDATE VARCHAR(10);     
    --查詢營業日檔的begin Date
    Declare begDATE VARCHAR(10);
    --Declare sBIZDATE VARCHAR(10);
    -- Declare sDATEMODE VARCHAR(10);
SET begDATE =  to_char(Date(substr(sBIZDATE,1,4) || '-' || substr(sBIZDATE,5,2) || '-' || substr(sBIZDATE,7,2) ||' 00:00:00') - 1 Month , 'yyyymmdd') ;
    --sBizDATE的前一營業日
    SET sPREVDATE =(SELECT TRANS_DATE FROM (
                                            SELECT EACHUSER.TRANS_DATE(txn_date,'W','') TRANS_DATE  ,row_number()  OVER (ORDER BY txn_date desc) row_num
                                            FROM	EACHUSER.WK_DATE_CALENDAR 
                                            where (txn_date > EACHUSER.TRANS_DATE(begDATE,'T','') and txn_date < EACHUSER.TRANS_DATE(sBIZDATE,'T','') ) and IS_TXN_DATE='Y' )
                                        where row_num =1);
--SET sBIZDATE = '20150225';
--SET sPREVDATE = '20150224';
--SET sPhase = '01';    

    --20150523 edit by PU
    --Call EACHUSER.UPD_EACH_BATCH_STATUS(sBizDATE, sPhase ,'BAT_RPDAILYSUM', 'P' , '' );
    CALL EACHUSER.UPD_EACH_BATCH_STATUS(sBizDATE, sPhase ,'BAT_RPDAILYSUM', 'P');

--清算階段後統計檔
        Delete EACHUSER.RPDAILYSUMTAB Where BizDATE=sBIZDATE and CLEARINGPHASE =sPhase ;
        commit;
        INSERT INTO EACHUSER.RPDAILYSUMTAB (BIZDATE, CLEARINGPHASE, BRBK_ID, BRBK_NAME, BGBK_ID, BGBK_NAME, OPBK_ID, TXN_ID, TXN_NAME, SENDERID, COMPANY_ABBR_NAME, BUSINESS_TYPE_ID, OP_TYPE, RESULTSTATUS, CNT, AMT, PCODE, EACH_TXN_NAME) 
        SELECT
        BIZDATE,
        CLEARINGPHASE,
        BRBK_ID,
        EACHUSER.GETBKNAME(BRBK_ID) AS BRBK_NAME,
        EACHUSER.GETBKHEADID(BRBK_ID) AS BGBK_ID,
        (SELECT B.BGBK_NAME FROM EACHUSER.BANK_GROUP AS B WHERE B.BGBK_ID = EACHUSER.GETBKHEADID(BRBK_ID)) AS BGBK_NAME,
         --20150924 19:00 EDIT BY HUGO 抓取正確的操作行
        ( EACHUSER.GET_OPBKID_BY_DATE(BRBK_ID , sBIZDATE) ) AS OPBK_ID ,
        --(SELECT OPBK_ID FROM EACHUSER.BANK_GROUP WHERE BGBK_ID = EACHUSER.GETBKHEADID(BRBK_ID)) AS OPBK_ID,        
        TXN_ID,
        (SELECT TXN_NAME FROM EACHUSER.TXN_CODE WHERE TXN_ID = X.TXN_ID) AS TXN_NAME,
        SENDERID,
        EACHUSER.GETCOMPANY_ABBR(SENDERID) AS COMPANY_ABBR_NAME,
        (SELECT BUSINESS_TYPE_ID FROM EACHUSER.TXN_CODE WHERE TXN_ID = X.TXN_ID) AS BUSINESS_TYPE_ID,
        OP_TYPE,
        RESULTSTATUS,
        CNT,
        AMT,
        PCODE,
        (SELECT EACH_TXN_NAME FROM EACHUSER.EACH_TXN_CODE WHERE EACH_TXN_ID = X.PCODE) AS EACH_TXN_NAME
        FROM (
            --扣款行(+應收; -應付)  
            SELECT 
            BIZDATE, CLEARINGPHASE, OUTBANKID AS BRBK_ID, PCODE, TXID AS TXN_ID, SENDERID, RP_DSUM_RESULT AS RESULTSTATUS
            ,'O' AS OP_TYPE, COUNT(*) AS CNT, SUM(NEWTXAMT) AS AMT
            FROM EACHUSER.VW_ONBLOCKTAB
            WHERE COALESCE(GARBAGEDATA,'') <> '*' AND CLEARINGPHASE = sPhase AND BIZDATE = sBIZDATE
            GROUP BY BIZDATE, CLEARINGPHASE, OUTBANKID, PCODE, TXID, SENDERID, RP_DSUM_RESULT
            UNION ALL
            --入帳行(+應收; -應付)
            SELECT 
            BIZDATE, CLEARINGPHASE, INBANKID AS BRBK_ID, PCODE, TXID AS TXN_ID, SENDERID, RP_DSUM_RESULT AS RESULTSTATUS
            ,'I' AS OP_TYPE, COUNT(*) AS CNT, SUM(NEWTXAMT) AS AMT
            FROM EACHUSER.VW_ONBLOCKTAB
            WHERE COALESCE(GARBAGEDATA,'') <> '*' AND CLEARINGPHASE = sPhase AND BIZDATE = sBIZDATE
            GROUP BY BIZDATE, CLEARINGPHASE, INBANKID, PCODE, TXID, SENDERID, RP_DSUM_RESULT
            UNION ALL
            --發動行(+應收; -應付)
            SELECT 
            BIZDATE, CLEARINGPHASE, SENDERBANKID AS BRBK_ID, PCODE, TXID AS TXN_ID, SENDERID, RP_DSUM_RESULT AS RESULTSTATUS
            ,'S' AS OP_TYPE, COUNT(*) AS CNT, SUM(NEWTXAMT) AS AMT
            FROM EACHUSER.VW_ONBLOCKTAB
            WHERE COALESCE(GARBAGEDATA,'') <> '*' AND CLEARINGPHASE = sPhase AND BIZDATE = sBIZDATE
            GROUP BY BIZDATE, CLEARINGPHASE, SENDERBANKID, PCODE, TXID, SENDERID, RP_DSUM_RESULT
        ) AS X;
        COMMIT;

--20150327
--清算階段之前一營業日未完成交易結果統計檔
        Delete EACHUSER.RPPENDINGDAILYSUMTAB Where BizDATE=sPREVDATE and CLEARINGPHASE =sPhase ;
        INSERT INTO EACHUSER.RPPENDINGDAILYSUMTAB (BIZDATE, CLEARINGPHASE, TXN_ID, TXN_NAME,BUSINESS_TYPE_ID, BRBK_ID, BRBK_NAME, BGBK_ID, SENDERID,COMPANY_ABBR_NAME, PCODE,EACH_TXN_NAME, OP_TYPE, RESULTSTATUS ,CNT, AMT ,OPBK_ID) 
        select 
               OBIZDATE
                ,OCLEARINGPHASE
                ,TXN_ID
               ,(select TXN_NAME from EACHUSER.TXN_CODE where TXN_ID=X.TXN_ID) TXN_NAME
                ,(select BUSINESS_TYPE_ID from EACHUSER.TXN_CODE where TXN_ID=X.TXN_ID) BUSINESS_TYPE_ID
                ,BRBK_ID
                ,EACHUSER.GETBKNAME(BRBK_ID) BRBK_NAME
                 ,EACHUSER.GETBKHEADID(BRBK_ID) BGBK_ID
                 ,SENDERID
                , EACHUSER.GETCOMPANY_ABBR(SENDERID) COMPANY_ABBR_NAME
                 ,PCODE
               ,(select EACH_TXN_NAME from EACHUSER.EACH_TXN_CODE where EACH_TXN_ID=X.PCODE) EACH_TXN_NAME
                ,OP_TYPE 
                ,NewRESULT
                ,count(*) CNT
                , sum(AMT) 
                --20150924 19:00 EDIT BY HUGO 抓取正確的操作行
                ,( EACHUSER.GET_OPBKID_BY_DATE(BRBK_ID , sPREVDATE) ) AS OPBK_ID 
                --,  (SELECT OPBK_ID FROM EACHUSER.BANK_GROUP WHERE BGBK_ID = EACHUSER.GETBKHEADID(BRBK_ID) ) OPBK_ID
        from (
             --扣款行交易金額
              SELECT
                    B.OBIZDATE
                   ,B.OCLEARINGPHASE
                    ,A.TXID TXN_ID
                    ,B.OUTBANKID BRBK_ID
                     ,A.SENDERID
                     ,A.PCODE
                     ,'O' OP_TYPE
                     ,(case when (B.RESULTCODE='01'  or A.ACCTCODE='0') then 'R'  else 'A' end)  NewRESULT  
                   -- ,Count(*)  CNT
                    ,EACHUSER.ISNUMERIC(B.TXAMT) AMT
              FROM EACHUSER.ONPENDINGTAB B
              left join EACHUSER.ONBLOCKTAB A on B.otxdate=A.txdate  and A.Stan=B.oStan and A.Clearingphase=B.oClearingphase and A.BIZDATE = B.oBIZDATE 
                Where  B.OCLEARINGPHASE=sPhase and B.OBIZDATE=sPREVDATE
     --上下結果集合併 
        Union All
             --入帳行交易金額 
             SELECT
                    B.OBIZDATE
                   ,B.OCLEARINGPHASE
                    ,A.TXID TXN_ID
                    ,B.INBANKID BRBK_ID
                     ,A.SENDERID
                     ,A.PCODE
                     ,'I' OP_TYPE
                     ,(case when (B.RESULTCODE='01'  or A.ACCTCODE='0') then 'R'  else 'A' end)  NewRESULT  
                   -- ,Count(*)  CNT
                    ,EACHUSER.ISNUMERIC(B.TXAMT) AMT
              FROM EACHUSER.ONPENDINGTAB B
              left join EACHUSER.ONBLOCKTAB A on B.otxdate=A.txdate  and A.Stan=B.oStan and A.Clearingphase=B.oClearingphase and A.BIZDATE = B.oBIZDATE 
                Where  B.OCLEARINGPHASE=sPhase and B.OBIZDATE=sPREVDATE
     --上下結果集合併 
        Union ALL
             --發動行交易金額
            SELECT
                    B.OBIZDATE
                   ,B.OCLEARINGPHASE
                    ,A.TXID TXN_ID
                    ,B.SENDERBANKID BRBK_ID
                     ,A.SENDERID
                    ,A.PCODE
                     ,'S' OP_TYPE
                     ,(case when (B.RESULTCODE='01'  or A.ACCTCODE='0') then 'R'  else 'A' end)  NewRESULT  
                   -- ,Count(*)  CNT
                    ,EACHUSER.ISNUMERIC(B.TXAMT) AMT
              FROM EACHUSER.ONPENDINGTAB B
              left join EACHUSER.ONBLOCKTAB A on B.otxdate=A.txdate  and A.Stan=B.oStan and A.Clearingphase=B.oClearingphase and A.BIZDATE = B.oBIZDATE 
              Where  B.OCLEARINGPHASE=sPhase and B.OBIZDATE=sPREVDATE
         )  X Group by   OBIZDATE , OCLEARINGPHASE ,BRBK_ID ,OP_TYPE ,SENDERID , PCODE , TXN_ID, NewRESULT
        ;
        commit;

    --20150523 edit by PU
    --Call EACHUSER.UPD_EACH_BATCH_STATUS(sBizDATE, sPhase ,'BAT_RPDAILYSUM', 'S' ,'' );
    CALL EACHUSER.UPD_EACH_BATCH_STATUS(sBizDATE, sPhase ,'BAT_RPDAILYSUM', 'S');
END
GO



CREATE OR REPLACE PROCEDURE "EACHUSER"."MAN_RPMONTHSUM" (in sBizDATE varchar(10), in sPhase varchar(2))
	LANGUAGE SQL
BEGIN
	DECLARE nBIZDATE VARCHAR(8);	--現在營業日
	DECLARE pBIZDATE VARCHAR(8);	--要執行的資料日期

	DECLARE sYYYYMM VARCHAR(6);
	DECLARE sTXN_ID VARCHAR(3);
	DECLARE sBRBK_ID VARCHAR(7);
	DECLARE sSENDERID VARCHAR(10);
	DECLARE sPCODE VARCHAR(4);
	DECLARE sOP_TYPE VARCHAR(1);
	DECLARE sRESULTSTATUS VARCHAR(1);
	DECLARE sCNT DECIMAL(15,0);
	DECLARE sAMT DECIMAL(15,0);
	DECLARE eof SMALLINT DEFAULT 0;
	--單日的統計資料
	DECLARE C1 CURSOR FOR
		SELECT 
		YYYYMM, TXN_ID, BRBK_ID, SENDERID, PCODE, OP_TYPE, RESULTSTATUS, SUM(CNT) CNT, SUM(AMT) AMT
		FROM (
			--日統計(不含未完成)
			SELECT
			SUBSTR(BIZDATE,1,6) AS YYYYMM
			,TXN_ID
			,BRBK_ID
			,SENDERID
			,PCODE
			,OP_TYPE
			,RESULTSTATUS
			,CNT
			,AMT
			FROM EACHUSER.RPDAILYSUMTAB
			WHERE RESULTSTATUS <> 'P' AND BIZDATE = pBIZDATE
			--上下結果集合併
			UNION ALL
			--日統計未完成交易結果
			SELECT
			SUBSTR(BIZDATE,1,6) AS YYYYMM
			,TXN_ID
			,BRBK_ID
			,SENDERID
			,PCODE
			,OP_TYPE
			,RESULTSTATUS
			,CNT
			,AMT
			FROM EACHUSER.RPPENDINGDAILYSUMTAB
			WHERE BIZDATE = pBIZDATE
		) AS X GROUP BY YYYYMM, TXN_ID, BRBK_ID, SENDERID, PCODE, OP_TYPE , RESULTSTATUS;
	DECLARE CONTINUE HANDLER FOR NOT FOUND  
        SET eof = 1;
	DECLARE CONTINUE HANDLER FOR SQLEXCEPTION, SQLWARNING
		ROLLBACK;
	
	IF sPHASE = '02' THEN
		CALL EACHUSER.UPD_EACH_BATCH_STATUS(sBIZDATE, '02', 'BAT_RPMONTHSUM', 'P');		

		SET nBIZDATE = (SELECT (CASE DATEMODE WHEN '0' THEN THISDATE ELSE NEXTDATE END) FROM EACHUSER.EACHSYSSTATUSTAB);
		IF sBIZDATE > nBIZDATE THEN
			SET sBIZDATE = nBIZDATE;
		END IF;
		
		SET pBIZDATE = (
			SELECT TXN_DATE FROM (
				SELECT EACHUSER.TRANS_DATE(TXN_DATE, 'W', '') AS TXN_DATE, ROW_NUMBER() OVER (ORDER BY TXN_DATE DESC) AS ROW_NUM
				FROM EACHUSER.WK_DATE_CALENDAR
				WHERE TXN_DATE < EACHUSER.TRANS_DATE(sBIZDATE, 'T', '')
				AND TXN_DATE LIKE (SUBSTR(EACHUSER.TRANS_DATE(sBIZDATE, 'T', ''),1,4) || '%')
				AND IS_TXN_DATE = 'Y' AND 'Y' = (
					SELECT IS_TXN_DATE
					FROM EACHUSER.WK_DATE_CALENDAR
					WHERE TXN_DATE = EACHUSER.TRANS_DATE(sBIZDATE, 'T', '')
				)
			) WHERE ROW_NUM = 1
		);

		IF LENGTH(pBIZDATE) <> 0 THEN
			OPEN C1;
			FETCH C1 INTO sYYYYMM, sTXN_ID, sBRBK_ID, sSENDERID, sPCODE, sOP_TYPE, sRESULTSTATUS, sCNT, sAMT;
			WHILE (eof = 0) DO
				IF EXISTS (
					SELECT * FROM EACHUSER.RPMONTHSUMTAB WHERE
					YYYYMM = sYYYYMM AND TXN_ID = sTXN_ID AND BRBK_ID = sBRBK_ID AND SENDERID = sSENDERID
					AND PCODE = sPCODE AND OP_TYPE = sOP_TYPE AND RESULTSTATUS = sRESULTSTATUS
				) THEN
					UPDATE EACHUSER.RPMONTHSUMTAB SET
					CNT = (CNT + sCNT),
					AMT = (AMT + sAMT)
					WHERE
					YYYYMM = sYYYYMM AND TXN_ID = sTXN_ID AND BRBK_ID = sBRBK_ID AND SENDERID = sSENDERID
					AND PCODE = sPCODE AND OP_TYPE = sOP_TYPE AND RESULTSTATUS = sRESULTSTATUS;
				ELSE
					INSERT INTO EACHUSER.RPMONTHSUMTAB VALUES (
					sYYYYMM, sBRBK_ID, EACHUSER.GETBKNAME(sBRBK_ID), EACHUSER.GETBKHEADID(sBRBK_ID)
					, '', '', '', sTXN_ID, (SELECT TXN_NAME FROM EACHUSER.TXN_CODE WHERE TXN_ID = sTXN_ID)
					, sSENDERID, EACHUSER.GETCOMPANY_ABBR(sSENDERID)
					, (SELECT BUSINESS_TYPE_ID FROM EACHUSER.TXN_CODE WHERE TXN_ID = sTXN_ID)
					, '', sOP_TYPE, sRESULTSTATUS, sCNT, sAMT, sPCODE
					, (SELECT EACH_TXN_NAME FROM EACHUSER.EACH_TXN_CODE WHERE EACH_TXN_ID = sPCODE)
					);

					UPDATE EACHUSER.RPMONTHSUMTAB AS A SET
					BGBK_NAME = EACHUSER.GETBKNAME(A.BGBK_ID)
					,OPBK_ID = (SELECT BG.OPBK_ID FROM EACHUSER.BANK_GROUP AS BG WHERE BG.BGBK_ID = A.BGBK_ID)
					,OPBK_NAME = (SELECT OP.BGBK_NAME FROM EACHUSER.BANK_GROUP AS OP WHERE OP.BGBK_ID = (SELECT BG.OPBK_ID FROM EACHUSER.BANK_GROUP AS BG WHERE BG.BGBK_ID = A.BGBK_ID))
					,BUSINESS_TYPE_NAME = (SELECT BT.BUSINESS_TYPE_NAME FROM EACHUSER.BUSINESS_TYPE AS BT WHERE BT.BUSINESS_TYPE_ID = A.BUSINESS_TYPE_ID)
					WHERE YYYYMM = sYYYYMM;
				END IF;
				FETCH C1 INTO sYYYYMM, sTXN_ID, sBRBK_ID, sSENDERID, sPCODE, sOP_TYPE, sRESULTSTATUS, sCNT, sAMT;
			END WHILE;
			CLOSE C1;
			
			CALL EACHUSER.UPD_EACH_BATCH_STATUS(sBIZDATE, '02', 'BAT_RPMONTHSUM', 'S');
			COMMIT;
		ELSE
			CALL EACHUSER.UPD_EACH_BATCH_STATUS(sBIZDATE, '02', 'BAT_RPMONTHSUM', 'F');
		END IF;
	ELSE
		CALL EACHUSER.UPD_EACH_BATCH_STATUS(sBIZDATE, '02', 'BAT_RPMONTHSUM', 'N');
	END IF;
END
GO

CREATE OR REPLACE PROCEDURE "EACHUSER"."MAN_RPONBLOCKTAB" (in sBizDATE varchar(10), in sPhase varchar(2))
	LANGUAGE SQL
BEGIN
	--Declare sPhase VARCHAR(10);
     --查詢營業日檔的begin Date
    Declare begDATE VARCHAR(10);
    Declare sPREVDATE VARCHAR(10);
    Declare OnBlock_CNT VARCHAR(10);
    Declare OnPending_CNT VARCHAR(10);
	--SET sBizDATE = (SELECT THISDATE FROM EACHUSER.EACHSYSSTATUSTAB);
    --SET sPhase = (SELECT	(case when ClearingPhase='01' then '02' else '01' end) FROM	EACHUSER.EACHSYSSTATUSTAB);   

    --20150523 edit by PU
    --Call EACHUSER.UPD_EACH_BATCH_STATUS(sBizDATE, sPhase ,'BAT_RPONBLOCKTAB', 'P' , '' );  
    CALL EACHUSER.UPD_EACH_BATCH_STATUS(sBizDATE, sPhase ,'BAT_RPONBLOCKTAB', 'P');  

 SET begDATE =  to_char(Date(substr(sBIZDATE,1,4) || '-' || substr(sBIZDATE,5,2) || '-' || substr(sBIZDATE,7,2) ||' 00:00:00') - 1 Month , 'yyyymmdd') ;
   --sBizDATE的前一營業日
    SET sPREVDATE =(SELECT TRANS_DATE FROM (
                                            SELECT EACHUSER.TRANS_DATE(txn_date,'W','') TRANS_DATE  ,row_number()  OVER (ORDER BY txn_date desc) row_num
                                            FROM	EACHUSER.WK_DATE_CALENDAR 
                                            where (txn_date > EACHUSER.TRANS_DATE(begDATE,'T','') and txn_date < EACHUSER.TRANS_DATE(sBIZDATE,'T','') ) and IS_TXN_DATE='Y' )
                                        where row_num =1);
 

Delete EACHUSER.RPONBLOCKTAB Where CLEARINGPHASE =sPhase and BizDATE=sBizDATE ;
--本期的交易資料
INSERT INTO EACHUSER.RPONBLOCKTAB( NEWRESULT,  TXDATE, STAN, PCODE, SENDERBANK, RECEIVERBANK, TXDT, SENDERSTATUS, RECEIVERSTATUS, TIMEOUTCODE, CONRESULTCODE, ACCTCODE, CLEARINGCODE, PENDINGCODE, SENDERCLEARING, INCLEARING, OUTCLEARING, SENDERACQUIRE, INACQUIRE, OUTACQUIRE, SENDERHEAD, INHEAD, OUTHEAD, SENDERFEE, INFEE, OUTFEE, EACHFEE, REFUNDDEADLINE, SENDERID, RECEIVERID, TXID, TXAMT, FEE, SENDERBANKID, INBANKID, OUTBANKID, BIZDATE, EACHDT, CLEARINGPHASE, INACCTNO, OUTACCTNO, INID, OUTID, ACCTBAL, AVAILBAL, CHECKTYPE, MERCHANTID, ORDERNO, TRMLID, TRMLCHECK, TRMLMCC, BANKRSPMSG, RRN, RESULTSTATUS, RC1, RC2, RC3, RC4, RC5, RC6, UPDATEDT, CONMEMO,COMPANY_ABBR) 
SELECT
RESULTSTATUS NEWRESULT ,    --原始交易的狀態不變
	TXDATE,
	STAN,
	PCODE,
	SENDERBANK,
	RECEIVERBANK,
	--timestamp(substr(TXDT,1,4) || '-' || substr(TXDT,5,2) || '-' || substr(TXDT,7,2) || '-' || substr(TXDT,9,2)|| '.' || substr(TXDT,11,2) || '.' || substr(TXDT,13,2) ) TXDT, 
NEWTXDT,
	SENDERSTATUS,
	RECEIVERSTATUS,
	TIMEOUTCODE,
	CONRESULTCODE,
	ACCTCODE,
	CLEARINGCODE,
	PENDINGCODE,
	SENDERCLEARING,
	INCLEARING,
	OUTCLEARING,
	SENDERACQUIRE,
	INACQUIRE,
	OUTACQUIRE,
	SENDERHEAD,
	INHEAD,
	OUTHEAD,
NEWSENDERFEE,
NEWINFEE,
NEWOUTFEE,
NEWEACHFEE,
	REFUNDDEADLINE,
	SENDERID,
	RECEIVERID,
	TXID,
NEWTXAMT,
NEWFEE,
	SENDERBANKID,
	INBANKID,
	OUTBANKID,
	BIZDATE,
	EACHDT,
	CLEARINGPHASE,
	INACCTNO,
	OUTACCTNO,
	INID,
	OUTID,
	ACCTBAL,
	AVAILBAL,
	CHECKTYPE,
	MERCHANTID,
	ORDERNO,
	TRMLID,
	TRMLCHECK,
	TRMLMCC,
	BANKRSPMSG,
	RRN,
	RESULTSTATUS,
	RC1,
	RC2,
	RC3,
	RC4,
	RC5,
	RC6, 
    UPDATEDT,	
    CONMEMO,
    EACHUSER.GETCOMPANY_ABBR(SENDERID) COMPANY_ABBR
FROM
	EACHUSER.VW_ONBLOCKTAB
Where  COALESCE(GARBAGEDATA,'') <> '*'  and CLEARINGPHASE =sPhase and BIZDATE =sBizDATE 
;
commit;
    --20150523 edit by PU
    --SET OnBlock_CNT=(SELECT char(count(*)) From EACHUSER.RPONBLOCKTAB Where CLEARINGPHASE =sPhase and BIZDATE =sBizDATE ) ;
    --Call EACHUSER.UPD_EACH_BATCH_STATUS(sBizDATE, sPhase ,'BAT_RPONBLOCKTAB', 'S' ,'總筆數:' || OnBlock_CNT );
    CALL EACHUSER.UPD_EACH_BATCH_STATUS(sBizDATE, sPhase ,'BAT_RPONBLOCKTAB', 'S');

    -- Processing ONPENDINGTAB
    --20150523 edit by PU
    --Call EACHUSER.UPD_EACH_BATCH_STATUS(sBizDATE, sPhase ,'BAT_RPONPENDINGTAB', 'P' , '' );
    CALL EACHUSER.UPD_EACH_BATCH_STATUS(sBizDATE, sPhase ,'BAT_RPONPENDINGTAB', 'P');

Delete EACHUSER.RPONPENDINGTAB Where OCLEARINGPHASE =sPhase and OBIZDATE =sBizDATE;
INSERT INTO EACHUSER.RPONPENDINGTAB( RESP, OTXDATE, OSTAN, PCODE, CLEARINGCODE, OBIZDATE, OCLEARINGPHASE, BIZDATE, CLEARINGPHASE, RESULTCODE, SENDERBANK, SENDERCLEARING, INCLEARING, OUTCLEARING, SENDERACQUIRE, INACQUIRE, OUTACQUIRE, SENDERHEAD, INHEAD, OUTHEAD, SENDERFEE, INFEE, OUTFEE, EACHFEE, TXAMT, SENDERBANKID, OUTBANKID, INBANKID, OUTACCT, INACCT, ACHFLAG, TXOBIZDATE, TXOCLEARINGPHASE,	TXBIZDATE,	TXCLEARINGPHASE, CDATE, TXDT, SENDERID, TXID) 
SELECT
   EACHUSER.GETRESPDESC(oTxDate,oStan) RESP
  -- , a.*
    ,OTXDATE, OSTAN, PCODE, CLEARINGCODE, OBIZDATE, OCLEARINGPHASE, BIZDATE, CLEARINGPHASE, RESULTCODE, SENDERBANK, SENDERCLEARING, INCLEARING, OUTCLEARING, SENDERACQUIRE, INACQUIRE, OUTACQUIRE, SENDERHEAD, INHEAD, OUTHEAD, SENDERFEE, INFEE, OUTFEE, EACHFEE, TXAMT, SENDERBANKID, OUTBANKID, INBANKID, OUTACCT, INACCT, ACHFLAG, TXOBIZDATE, TXOCLEARINGPHASE,	TXBIZDATE,	TXCLEARINGPHASE, CURRENT TIMESTAMP, TXDT, SENDERID, TXID
FROM
	EACHUSER.ONPENDINGTAB a Where  OCLEARINGPHASE =sPhase and OBIZDATE =sBizDATE
;
commit;

Delete EACHUSER.RPONPENDINGTAB Where OCLEARINGPHASE =sPhase and OBIZDATE =sPREVDATE;
INSERT INTO EACHUSER.RPONPENDINGTAB( RESP, OTXDATE, OSTAN, PCODE, CLEARINGCODE, OBIZDATE, OCLEARINGPHASE, BIZDATE, CLEARINGPHASE, RESULTCODE, SENDERBANK, SENDERCLEARING, INCLEARING, OUTCLEARING, SENDERACQUIRE, INACQUIRE, OUTACQUIRE, SENDERHEAD, INHEAD, OUTHEAD, SENDERFEE, INFEE, OUTFEE, EACHFEE, TXAMT, SENDERBANKID, OUTBANKID, INBANKID, OUTACCT, INACCT, ACHFLAG, TXOBIZDATE, TXOCLEARINGPHASE,	TXBIZDATE,	TXCLEARINGPHASE, CDATE, TXDT, SENDERID, TXID) 
SELECT
   EACHUSER.GETRESPDESC(oTxDate,oStan) RESP
  -- , a.*
  ,OTXDATE, OSTAN, PCODE, CLEARINGCODE, OBIZDATE, OCLEARINGPHASE, BIZDATE, CLEARINGPHASE, RESULTCODE, SENDERBANK, SENDERCLEARING, INCLEARING, OUTCLEARING, SENDERACQUIRE, INACQUIRE, OUTACQUIRE, SENDERHEAD, INHEAD, OUTHEAD, SENDERFEE, INFEE, OUTFEE, EACHFEE, TXAMT, SENDERBANKID, OUTBANKID, INBANKID, OUTACCT, INACCT, ACHFLAG, TXOBIZDATE, TXOCLEARINGPHASE,	TXBIZDATE,	TXCLEARINGPHASE, CURRENT TIMESTAMP, TXDT, SENDERID, TXID
FROM
	EACHUSER.ONPENDINGTAB a Where  OCLEARINGPHASE =sPhase and OBIZDATE =sPREVDATE
;
commit;

    --20150523 edit by PU
    --SET OnPending_CNT=(SELECT char(count(*)) From EACHUSER.RPONPENDINGTAB Where OCLEARINGPHASE =sPhase and OBIZDATE =sBizDATE ) ;
    --Call EACHUSER.UPD_EACH_BATCH_STATUS(sBizDATE, sPhase ,'BAT_RPONPENDINGTAB', 'S', '總筆數：' || OnPending_CNT );
    CALL EACHUSER.UPD_EACH_BATCH_STATUS(sBizDATE, sPhase ,'BAT_RPONPENDINGTAB', 'S');
END
GO
CREATE OR REPLACE PROCEDURE "EACHUSER"."MAN_RPONCLEARINGTAB" (in sBizDATE varchar(10), in sPhase varchar(2))
	LANGUAGE SQL
BEGIN
	--Declare sPhase VARCHAR(10);
    --Declare sBizDATE VARCHAR(10);
    --Declare sPREVDATE VARCHAR(10);
    Declare sTOTAL_RECVCNT VARCHAR(10);
    Declare sTOTAL_RECVAMT VARCHAR(16);
    Declare sTOTAL_PAYCNT VARCHAR(10); 
    Declare sTOTAL_PAYAMT VARCHAR(16);
    Declare sTOTAL_RVSRECVCNT VARCHAR(10);
    Declare sTOTAL_RVSRECVAMT VARCHAR(16);
    Declare sTOTAL_RVSPAYCNT VARCHAR(10);
    Declare sTOTAL_RVSPAYAMT VARCHAR(16);
    Declare sNote VARCHAR(200);
    --SET sPhase = 0;
	--SET sBizDATE = (SELECT THISDATE FROM EACHUSER.EACHSYSSTATUSTAB);
    --SET sPhase = (SELECT	(case when ClearingPhase='01' then '02' else '01' end) FROM	EACHUSER.EACHSYSSTATUSTAB);    
    --SET sPREVDATE = (SELECT PREVDATE FROM EACHUSER.EACHSYSSTATUSTAB);
    
    --20150523 edit by PU
    --Call EACHUSER.UPD_EACH_BATCH_STATUS(sBizDATE, sPhase ,'BAT_RPONCLEARINGTAB', 'P' , '' );
    CALL EACHUSER.UPD_EACH_BATCH_STATUS(sBizDATE, sPhase ,'BAT_RPONCLEARINGTAB', 'P');

Delete EACHUSER.RPONCLEARINGTAB Where BizDATE=sBizDATE and CLEARINGPHASE =sPhase ;
--本期的交易資料結算檔
INSERT INTO EACHUSER.RPONCLEARINGTAB(BIZDATE, CLEARINGPHASE, PCODE, BUSINESS_TYPE_ID, BRBK_ID, BGBK_ID, RECVCNT, RECVAMT, PAYCNT, PAYAMT, RVSRECVCNT, RVSRECVAMT, RVSPAYCNT, RVSPAYAMT, BRBK_NAME, BGBK_NAME, OPBK_ID, OPBK_NAME, EACH_TXN_NAME, BUSINESS_TYPE_NAME) 
select 
        coalesce(X.BIZDATE ,Y.BIZDATE) BIZDATE
        ,coalesce(X.CLEARINGPHASE ,Y.CLEARINGPHASE) CLEARINGPHASE
        ,coalesce(X.PCODE ,Y.PCODE) PCODE
        ,(select BUSINESS_TYPE_ID from EACHUSER.EACH_TXN_CODE where EACH_TXN_ID=coalesce(X.PCODE ,Y.PCODE)) BUSINESS_TYPE_ID
        ,coalesce(X.BRBK_ID ,Y.BRBK_ID) BRBK_ID
        ,EACHUSER.GETBKHEADID(coalesce(X.BRBK_ID ,Y.BRBK_ID)) BGBK_ID
        ,coalesce(X.RECVCNT,0) RECVCNT
        ,coalesce(X.RECVAMT,0) RECVAMT
        ,coalesce(Y.PAYCNT,0) PAYCNT
        ,coalesce(Y.PAYAMT,0) PAYAMT
        ,coalesce(X.RVSRECVCNT,0) RVSRECVCNT
        ,coalesce(X.RVSRECVAMT,0) RVSRECVAMT
        ,coalesce(Y.RVSPAYCNT,0) RVSPAYCNT
        ,coalesce(Y.RVSPAYAMT,0) RVSPAYAMT
        ,(SELECT BRBK_NAME FROM EACHUSER.BANK_BRANCH WHERE BRBK_ID = coalesce(X.BRBK_ID ,Y.BRBK_ID)) AS BRBK_NAME
        ,SUBSTR(EACHUSER.GETBKHEAD(coalesce(X.BRBK_ID ,Y.BRBK_ID)),9) AS BGBK_NAME
        ,(SELECT OPBK_ID FROM EACHUSER.BANK_GROUP WHERE BGBK_ID = EACHUSER.GETBKHEADID(coalesce(X.BRBK_ID ,Y.BRBK_ID))) AS OPBK_ID
        ,(SELECT BGBK_NAME FROM EACHUSER.BANK_GROUP WHERE BGBK_ID = (SELECT OPBK_ID FROM EACHUSER.BANK_GROUP WHERE BGBK_ID = EACHUSER.GETBKHEADID(coalesce(X.BRBK_ID ,Y.BRBK_ID)))) AS OPBK_NAME
        ,(SELECT EACH_TXN_NAME FROM EACHUSER.EACH_TXN_CODE WHERE EACH_TXN_ID = coalesce(X.PCODE ,Y.PCODE)) AS EACH_TXN_NAME
        ,(SELECT BUSINESS_TYPE_NAME FROM EACHUSER.BUSINESS_TYPE WHERE BUSINESS_TYPE_ID = (select BUSINESS_TYPE_ID from EACHUSER.EACH_TXN_CODE where EACH_TXN_ID=coalesce(X.PCODE ,Y.PCODE))) AS BUSINESS_TYPE_NAME
from
    --應收款(入帳應收+)及(扣款沖正應收+) 
(    select 
        coalesce(a.BIZDATE ,b.BIZDATE) BIZDATE
        ,coalesce(a.CLEARINGPHASE ,b.CLEARINGPHASE) CLEARINGPHASE
        ,coalesce(a.PCODE ,b.PCODE) PCODE
        ,coalesce(a.BRBK_ID ,b.BRBK_ID) BRBK_ID
        ,A.RECVCNT
        ,A.RECVAMT
        ,B.RVSRECVCNT
        ,B.RVSRECVAMT
    from 
    (SELECT
        BIZDATE
       ,CLEARINGPHASE
        ,PCODE
        ,INBANKID BRBK_ID
        ,Count(*) RECVCNT
        ,SUM (NEWTXAMT) RECVAMT
    FROM
        EACHUSER.VW_ONBLOCKTAB 
    Where NEWRESULT != 'R'  and SENDERSTATUS != '1'  and CLEARINGPHASE=sPhase and BIZDATE=sBizDATE 
    Group by     BIZDATE , CLEARINGPHASE , PCODE , INBANKID ) A
    FULL OUTER JOIN
    (SELECT
        NEWBIZDATE BIZDATE
        ,NEWCLRPHASE CLEARINGPHASE
        ,PCODE
 -- ,INBANKID BRBK_ID --edit by hugo
,OUTBANKID BRBK_ID 
        ,Count(*)  RVSRECVCNT
        ,0-(SUM (NEWTXAMT))  RVSRECVAMT
    FROM
        EACHUSER.VW_ONPENDING_EC
    Where NEWBIZDATE=sBizDATE and NEWCLRPHASE=sPhase 
    -- Group by     NEWBIZDATE , NEWCLRPHASE , PCODE , INBANKID ) B ----edit by hugo
 Group by     NEWBIZDATE , NEWCLRPHASE , PCODE , OUTBANKID ) B
on B.BIZDATE=A.BIZDATE and B.CLEARINGPHASE=A.CLEARINGPHASE and B.PCODE=A.PCODE and B.BRBK_ID=A.BRBK_ID
)  X
FULL OUTER JOIN
--應付款(扣款應付-)及(入帳沖正應付-)
(    select 
        coalesce(C.BIZDATE ,D.BIZDATE) BIZDATE
        ,coalesce(C.CLEARINGPHASE ,D.CLEARINGPHASE) CLEARINGPHASE
        ,coalesce(C.PCODE ,D.PCODE) PCODE
        ,coalesce(C.BRBK_ID ,D.BRBK_ID) BRBK_ID
        ,C.PAYCNT
        ,C.PAYAMT
        ,D.RVSPAYCNT
        ,D.RVSPAYAMT
    from 
    (SELECT
       BIZDATE
       ,CLEARINGPHASE
        ,PCODE
        ,OUTBANKID BRBK_ID
        ,Count(*)  PAYCNT
        ,0-(SUM (NEWTXAMT)) PAYAMT
    FROM
        EACHUSER.VW_ONBLOCKTAB 
    Where NEWRESULT != 'R' and SENDERSTATUS != '1' and CLEARINGPHASE=sPhase and BIZDATE=sBizDATE 
    Group by     BIZDATE , CLEARINGPHASE ,  PCODE ,OUTBANKID ) C
    FULL OUTER JOIN
    (SELECT
        NEWBIZDATE BIZDATE
        ,NEWCLRPHASE CLEARINGPHASE
        ,PCODE
        --,OUTBANKID BRBK_ID --edit by hugo
,INBANKID BRBK_ID
       ,Count(*) RVSPAYCNT
        ,SUM (NEWTXAMT) RVSPAYAMT
    FROM
        EACHUSER.VW_ONPENDING_EC
    Where NEWBIZDATE=sBizDATE and NEWCLRPHASE=sPhase 
        --Group by     NEWBIZDATE , NEWCLRPHASE , PCODE , OUTBANKID ) D --edit by hugo
Group by     NEWBIZDATE , NEWCLRPHASE , PCODE , INBANKID ) D
on D.BIZDATE=C.BIZDATE and D.CLEARINGPHASE=C.CLEARINGPHASE and D.PCODE=C.PCODE and D.BRBK_ID=C.BRBK_ID
) Y on  Y.BIZDATE=X.BIZDATE and Y.CLEARINGPHASE=X.CLEARINGPHASE and Y.PCODE=X.PCODE and Y.BRBK_ID=X.BRBK_ID
;
commit;

    --20150523 edit by PU
    --Call EACHUSER.UPD_EACH_BATCH_STATUS(sBizDATE, sPhase ,'BAT_RPONCLEARINGTAB', 'S' , sNote );
    CALL EACHUSER.UPD_EACH_BATCH_STATUS(sBizDATE, sPhase ,'BAT_RPONCLEARINGTAB', 'S');

END
GO
CREATE OR REPLACE PROCEDURE "EACHUSER"."TYPH_UPD_BIZDATE" (OUT OUTARG Varchar(50) , IN iTyphDate varchar(8), IN iNewBizdate varchar(8))
	LANGUAGE SQL
BEGIN
    DECLARE SQLCODE		INTEGER DEFAULT 0;
  	DECLARE SQLSTATE	CHAR(5) DEFAULT '00000';
    DECLARE S_RTCD    	INTEGER 	DEFAULT 0;			-- SQLCODE
	DECLARE S_RTST    	CHAR(5) 	DEFAULT '00000';	-- SQLSTATE
    DECLARE ERROR_MESSAGE VARCHAR(1024) DEFAULT '';
    DECLARE rows_updated INTEGER;
    DECLARE rows_updated_tmp INTEGER;
 
   --========== ERROR HANDLE (ERROR) ==========
	DECLARE EXIT  HANDLER FOR SQLEXCEPTION
	BEGIN
  		GET DIAGNOSTICS EXCEPTION 1 ERROR_MESSAGE = MESSAGE_TEXT;
  		VALUES ( SQLCODE, SQLSTATE ) INTO S_RTCD, S_RTST ;
  		ROLLBACK WORK;
        SET OUTARG = S_RTCD  || ',' || OUTARG;
    END;
SET OUTARG ='';
If  length(iTyphDate) =8 and  length(iNewBizdate) =8 then
 --連線交易檔 ONBLOCKTAB
        UPDATE EACHUSER.ONBLOCKTAB
            SET  BIZDATE = iNewBizdate , CLEARINGPHASE='01'
        WHERE BIZDATE = iTyphDate ;
    GET DIAGNOSTICS rows_updated = ROW_COUNT;
    SET OUTARG =  trim(char(rows_updated)) || ',' ;

--未完成交易檔 ONPENDINGTAB
    SET rows_updated = 0;
       UPDATE EACHUSER.ONPENDINGTAB
            SET  BIZDATE = iNewBizdate , CLEARINGPHASE='01'
        WHERE BIZDATE = iTyphDate ;
    GET DIAGNOSTICS rows_updated_tmp = ROW_COUNT;
        
    UPDATE EACHUSER.ONPENDINGTAB
            SET  OBIZDATE = iNewBizdate , OCLEARINGPHASE='01'
        WHERE OBIZDATE = iTyphDate ;
    GET DIAGNOSTICS rows_updated = ROW_COUNT;
    SET rows_updated = rows_updated+rows_updated_tmp;
    SET OUTARG =  OUTARG || trim(char(rows_updated)) || ',' ;

--連線結算檔 ONCLEARINGTAB
    SET rows_updated = 0;
       UPDATE EACHUSER.ONCLEARINGTAB
            SET  TYPHBIZDATE = iNewBizdate , TYPHCLEARINGPHASE='01'
        WHERE TYPHBIZDATE = iTyphDate ;
    GET DIAGNOSTICS rows_updated = ROW_COUNT;
    SET OUTARG =  OUTARG || trim(char(rows_updated)) || ',' ;
commit;
SET OUTARG =  '0' || ',' ||OUTARG;
End If;
--return OUTARG;
END
GO
CREATE OR REPLACE PROCEDURE "EACHUSER"."UPD_EACH_BATCH_STATUS"(IN iBIZDATE VARCHAR(10), IN iCLEARINGPHASE VARCHAR(2), IN iBATCH_PROC_NAME VARCHAR(100) ,IN iPROC_STATUS CHAR(1))
	LANGUAGE SQL
BEGIN
	DECLARE EOF INT DEFAULT 0;
	DECLARE sNOTE VARCHAR(300) DEFAULT '';
	DECLARE vBANKID VARCHAR(7);
	DECLARE vONBLOCK_CNT INT;
	DECLARE vPENDING_CNT INT;
	DECLARE vPCODE VARCHAR(4);
	DECLARE vRECVCNT INT;
	DECLARE vRECVAMT BIGINT;
	DECLARE vPAYCNT INT;
	DECLARE vPAYAMT BIGINT;
	DECLARE vRVSRECVCNT INT;
	DECLARE vRVSRECVAMT BIGINT;
	DECLARE vRVSPAYCNT INT;
	DECLARE vRVSPAYAMT BIGINT;
	DECLARE vBALANCEAMT BIGINT;
	DECLARE vAMT DECIMAL(15,2);
	DECLARE vRVSAMT DECIMAL(15,2);
	DECLARE vTEMP1 INT;
	DECLARE vTEMP2 INT;
	DECLARE vTEMP3 INT;
	DECLARE vTEMP4 VARCHAR(300) DEFAULT '';
	DECLARE vTEMP5 VARCHAR(300) DEFAULT '';
	DECLARE vTEMP6 VARCHAR(300) DEFAULT '';
	DECLARE vERROR_RTN VARCHAR(4000) DEFAULT '';
	DECLARE C1 CURSOR FOR (SELECT VARCHAR(BANKID) AS BANKID, (COALESCE(ONBLOCK_SCNT,0)+COALESCE(ONBLOCK_FCNT,0)+COALESCE(PENDING_CNT,0)) AS ONBLOCK_CNT FROM EACHUSER.EACH_BATCH_DATA_VALIDATION WHERE CLEARINGPHASE = iCLEARINGPHASE and BIZDATE = iBIZDATE);
	DECLARE C2 CURSOR FOR (SELECT VARCHAR(BANKID) AS BANKID, COALESCE(PENDING_CNT,0) AS PENDING_CNT FROM EACHUSER.EACH_BATCH_DATA_VALIDATION WHERE CLEARINGPHASE = iCLEARINGPHASE and BIZDATE = iBIZDATE);
	DECLARE C3 CURSOR FOR (SELECT BANKID, PCODE, RECVCNT, RECVAMT, PAYCNT, PAYAMT, RVSRECVCNT, RVSRECVAMT, RVSPAYCNT, RVSPAYAMT, BALANCEAMT FROM EACHUSER.BHCLEARINGTAB WHERE BIZDATE = iBIZDATE AND CLEARINGPHASE = iCLEARINGPHASE);
	DECLARE C4 CURSOR FOR (
		SELECT BANKID,
		(SUM(RECVMBFEEAMT) - SUM(PAYMBFEEAMT) - SUM(PAYEACHFEEAMT)) AS AMT,
		(SUM(RVSRECVMBFEEAMT) - SUM(RVSPAYMBFEEAMT) + SUM(RVSRECVEACHFEEAMT)) AS RVSAMT
		FROM EACHUSER.BHCLEARINGTAB
		WHERE BIZDATE = iBIZDATE AND CLEARINGPHASE = iCLEARINGPHASE
		GROUP BY BIZDATE, CLEARINGPHASE, BANKID
		ORDER BY BIZDATE, CLEARINGPHASE, BANKID
	);
	DECLARE C5 CURSOR FOR (SELECT VARCHAR(BANKID) AS BANKID, ONBLOCK_SCNT, ONBLOCK_FCNT, PENDING_CNT FROM EACHUSER.EACH_BATCH_DATA_VALIDATION WHERE BIZDATE = iBIZDATE AND CLEARINGPHASE = iCLEARINGPHASE);
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET EOF = 1;

    IF iPROC_STATUS = 'P' THEN
		UPDATE EACHUSER.EACH_BATCH_STATUS SET
		PROC_STATUS = iPROC_STATUS,
		BEGIN_TIME = CURRENT_TIMESTAMP,
		NOTE = sNOTE
		WHERE BIZDATE = iBIZDATE AND CLEARINGPHASE = iCLEARINGPHASE and BATCH_PROC_NAME = iBATCH_PROC_NAME;
		COMMIT;
    ELSE
		
		IF iBATCH_PROC_NAME = 'BAT_RPONBLOCKTAB' THEN
			SET sNOTE = '總筆數:' || COALESCE((SELECT COUNT(*) FROM EACHUSER.RPONBLOCKTAB WHERE COALESCE(GARBAGEDATA,'') <> '*' AND BIZDATE = iBIZDATE AND CLEARINGPHASE = iCLEARINGPHASE),0);
			
			OPEN C1;
			FETCH FROM C1 INTO vBANKID, vONBLOCK_CNT;
			WHILE EOF = 0 DO
				SET vTEMP1 = COALESCE((SELECT COUNT(*) FROM EACHUSER.RPONBLOCKTAB WHERE COALESCE(GARBAGEDATA,'') <> '*' AND BIZDATE = iBIZDATE AND CLEARINGPHASE = iCLEARINGPHASE AND SENDERACQUIRE = vBANKID),0);
				IF NOT(vONBLOCK_CNT = vTEMP1) THEN
					IF LENGTH(vERROR_RTN) = 0 THEN
						SET vERROR_RTN = '@圈存扣款檔筆數不符:;';
					END IF;
					SET vERROR_RTN = vERROR_RTN || vBANKID || ';';
				END IF;
				FETCH FROM C1 INTO vBANKID, vONBLOCK_CNT;
			END WHILE;
			CLOSE C1;
			
			IF LENGTH(vERROR_RTN) = 0 THEN
				SET vERROR_RTN = (
					SELECT
					(CASE WHEN A.ONBLOCK_SCNT = B.ONBLOCK_SCNT THEN '' ELSE '@成功筆數不符!' END) ||
					(CASE WHEN A.ONBLOCK_FCNT = B.ONBLOCK_FCNT THEN '' ELSE '@失敗筆數不符!' END) ||
					(CASE WHEN A.PENDING_CNT = B.PENDING_CNT THEN '' ELSE '@未完成筆數不符!' END) AS sNOTE
					FROM (
						SELECT COALESCE(SUM(ONBLOCK_SCNT),0) AS ONBLOCK_SCNT, COALESCE(SUM(ONBLOCK_FCNT),0) AS ONBLOCK_FCNT, COALESCE(SUM(PENDING_CNT),0) AS PENDING_CNT
						FROM (
							SELECT
							COALESCE((SELECT COUNT(*) FROM EACHUSER.RPONBLOCKTAB AS B WHERE COALESCE(GARBAGEDATA, '') <> '*' AND B.BIZDATE = T.BIZDATE AND B.CLEARINGPHASE = T.CLEARINGPHASE AND B.SENDERACQUIRE = T.BANKID AND B.RESULTSTATUS = 'A'),0) AS ONBLOCK_SCNT,
							COALESCE((SELECT COUNT(*) FROM EACHUSER.RPONBLOCKTAB AS B WHERE COALESCE(GARBAGEDATA, '') <> '*' AND B.BIZDATE = T.BIZDATE AND B.CLEARINGPHASE = T.CLEARINGPHASE AND B.SENDERACQUIRE = T.BANKID AND (B.RESULTSTATUS = 'R' OR (B.RESULTSTATUS = 'P' AND SENDERSTATUS = '1'))),0) AS ONBLOCK_FCNT,
							COALESCE((SELECT COUNT(*) FROM EACHUSER.RPONBLOCKTAB AS B WHERE COALESCE(GARBAGEDATA, '') <> '*' AND SENDERSTATUS <> '1' AND B.BIZDATE = T.BIZDATE AND B.CLEARINGPHASE = T.CLEARINGPHASE AND B.SENDERACQUIRE = T.BANKID AND B.RESULTSTATUS = 'P'),0) AS PENDING_CNT
							FROM (
								SELECT BIZDATE, CLEARINGPHASE, SENDERACQUIRE AS BANKID
								FROM EACHUSER.RPONBLOCKTAB
								WHERE COALESCE(GARBAGEDATA, '') <> '*'
								AND BIZDATE = iBIZDATE AND CLEARINGPHASE = iCLEARINGPHASE
								GROUP BY BIZDATE, CLEARINGPHASE, SENDERACQUIRE
							) AS T
						)
					) AS A, (
						SELECT COALESCE(SUM(ONBLOCK_SCNT),0) AS ONBLOCK_SCNT, COALESCE(SUM(ONBLOCK_FCNT),0) AS ONBLOCK_FCNT, COALESCE(SUM(PENDING_CNT),0) AS PENDING_CNT
						FROM EACHUSER.EACH_BATCH_DATA_VALIDATION
						WHERE BIZDATE = iBIZDATE AND CLEARINGPHASE = iCLEARINGPHASE
						GROUP BY BIZDATE, CLEARINGPHASE
					) AS B
				);
			END IF;			
		END IF;
		
		
		IF iBATCH_PROC_NAME = 'BAT_RPONPENDINGTAB' THEN
			SET sNOTE = '總筆數:' || COALESCE((SELECT COUNT(*) FROM EACHUSER.RPONPENDINGTAB WHERE OBIZDATE = iBIZDATE AND OCLEARINGPHASE = iCLEARINGPHASE),0);
			
			OPEN C2;
			FETCH FROM C2 INTO vBANKID, vPENDING_CNT;
			WHILE EOF = 0 DO
				SET vTEMP1 = COALESCE((SELECT COUNT(*) FROM EACHUSER.RPONPENDINGTAB WHERE OBIZDATE = iBIZDATE AND OCLEARINGPHASE = iCLEARINGPHASE AND SENDERACQUIRE = vBANKID),0);
				IF NOT(vPENDING_CNT = vTEMP1) THEN
					IF LENGTH(vERROR_RTN) = 0 THEN
						SET vERROR_RTN = '@未完成筆數不符:;';
					END IF;
					SET vERROR_RTN = vERROR_RTN || vBANKID || ';';
				END IF;
				FETCH FROM C2 INTO vBANKID, vPENDING_CNT;
			END WHILE;
			CLOSE C2;
			
			IF LENGTH(vERROR_RTN) = 0 THEN
				SET vERROR_RTN = (
					SELECT (CASE WHEN A.PENDING_CNT = B.PENDING_CNT THEN '' ELSE '@未完成總筆數不符!' END) AS sNOTE
					FROM (
						SELECT COALESCE(SUM(PENDING_CNT),0) AS PENDING_CNT FROM (
							SELECT COALESCE((SELECT COUNT(*) FROM EACHUSER.RPONPENDINGTAB AS B WHERE B.OBIZDATE = T.OBIZDATE AND B.OCLEARINGPHASE = T.OCLEARINGPHASE AND B.SENDERACQUIRE = T.BANKID),0) AS PENDING_CNT
							FROM (
								SELECT OBIZDATE, OCLEARINGPHASE, SENDERACQUIRE AS BANKID
								FROM EACHUSER.RPONPENDINGTAB WHERE OBIZDATE = iBIZDATE AND OCLEARINGPHASE = iCLEARINGPHASE
								GROUP BY OBIZDATE, OCLEARINGPHASE, SENDERACQUIRE
							) AS T
						)
					) AS A, (
						SELECT COALESCE(SUM(PENDING_CNT),0) AS PENDING_CNT
						FROM EACHUSER.EACH_BATCH_DATA_VALIDATION 
						WHERE BIZDATE = iBIZDATE AND CLEARINGPHASE = iCLEARINGPHASE
						GROUP BY BIZDATE, CLEARINGPHASE
					) AS B
				);
			END IF;			
		END IF;
		
		
		IF iBATCH_PROC_NAME = 'BAT_RPONCLEARINGTAB' THEN
			SET sNOTE = (
				SELECT
				COALESCE('應收總筆數:' || SUM(COALESCE(RECVCNT,0)) ||
				';應收總金額:' || SUM(COALESCE(RECVAMT,0)) ||
				';應付總筆數:' || SUM(COALESCE(PAYCNT,0)) ||
				';應付總金額:' || SUM(COALESCE(PAYAMT,0)) ||
				';應收沖正總筆數:' || SUM(COALESCE(RVSRECVCNT,0)) ||
				';應收沖正總金額:' || SUM(COALESCE(RVSRECVAMT,0)) ||
				';應付沖正總筆數:' || SUM(COALESCE(RVSPAYCNT,0)) ||
				';應付沖正總金額:' || SUM(COALESCE(RVSPAYAMT,0)),'總筆數:0')
				FROM EACHUSER.RPONCLEARINGTAB
				WHERE BIZDATE = iBIZDATE AND CLEARINGPHASE = iCLEARINGPHASE
			);
			
			OPEN C3;
			FETCH FROM C3 INTO vBANKID, vPCODE, vRECVCNT, vRECVAMT, vPAYCNT, vPAYAMT, vRVSRECVCNT, vRVSRECVAMT, vRVSPAYCNT, vRVSPAYAMT, vBALANCEAMT;
			WHILE EOF = 0 DO
				SET (vTEMP4, vTEMP5) = (
					SELECT BGBK_ID AS BANKID,
					(CASE SUM(COALESCE(RECVCNT,0)) WHEN vRECVCNT THEN '' ELSE '應收筆數不符' END) ||
					(CASE SUM(COALESCE(RECVAMT,0)) WHEN vRECVAMT THEN '' ELSE ',應收金額不符' END) ||
					(CASE SUM(COALESCE(PAYCNT,0)) WHEN vPAYCNT THEN '' ELSE ',應付筆數不符' END) ||
					(CASE -SUM(COALESCE(PAYAMT,0)) WHEN vPAYAMT THEN '' ELSE ',應付金額不符' END) ||
					(CASE SUM(COALESCE(RVSRECVCNT,0)) WHEN vRVSRECVCNT THEN '' ELSE ',沖正應收筆數不符' END) ||
					(CASE SUM(COALESCE(RVSRECVAMT,0)) WHEN vRVSRECVAMT THEN '' ELSE ',沖正應收金額不符' END) ||
					(CASE SUM(COALESCE(RVSPAYCNT,0)) WHEN vRVSPAYCNT THEN '' ELSE ',沖正應付筆數不符' END) ||
					(CASE -SUM(COALESCE(RVSPAYAMT,0)) WHEN vRVSPAYAMT THEN '' ELSE ',沖正應付金額不符' END) ||
					(CASE (SUM(RECVAMT)+SUM(RVSRECVAMT)+SUM(PAYAMT)+SUM(RVSPAYAMT)) WHEN vBALANCEAMT THEN '' ELSE ',應收付差額不符' END) AS sNOTE
					FROM EACHUSER.RPONCLEARINGTAB
					WHERE BIZDATE = iBIZDATE AND CLEARINGPHASE = iCLEARINGPHASE
					AND BGBK_ID = vBANKID AND PCODE = vPCODE
					GROUP BY BIZDATE, CLEARINGPHASE, BGBK_ID, PCODE
					ORDER BY BIZDATE, CLEARINGPHASE, BGBK_ID, PCODE
				);
				IF LENGTH(vTEMP5) <> 0 THEN
					SET vERROR_RTN = vERROR_RTN || vTEMP4 || ':' || vTEMP5 || ';';
				END IF;
				FETCH FROM C3 INTO vBANKID, vPCODE, vRECVCNT, vRECVAMT, vPAYCNT, vPAYAMT, vRVSRECVCNT, vRVSRECVAMT, vRVSPAYCNT, vRVSPAYAMT, vBALANCEAMT;
			END WHILE;
			CLOSE C3;
			
			IF LENGTH(vERROR_RTN) = 0 THEN
				SET vERROR_RTN = (
					SELECT
					(CASE WHEN A.RECVCNT = B.RECVCNT THEN '' ELSE '應收總筆數不符' END) ||
					(CASE WHEN A.RECVAMT = B.RECVAMT THEN '' ELSE ',應收總金額不符' END) ||
					(CASE WHEN A.PAYCNT = B.PAYCNT THEN '' ELSE ',應付總筆數不符' END) ||
					(CASE WHEN A.PAYAMT = B.PAYAMT THEN '' ELSE ',應付總金額不符' END) ||
					(CASE WHEN A.RVSRECVCNT = B.RVSRECVCNT THEN '' ELSE ',沖正應收總筆數不符' END) ||
					(CASE WHEN A.RVSRECVAMT = B.RVSRECVAMT THEN '' ELSE ',沖正應收總金額不符' END) ||
					(CASE WHEN A.RVSPAYCNT = B.RVSPAYCNT THEN '' ELSE ',沖正應付總筆數不符' END) ||
					(CASE WHEN A.RVSPAYAMT = B.RVSPAYAMT THEN '' ELSE ',沖正應付總金額不符' END) ||
					(CASE WHEN A.BALANCEAMT = B.BALANCEAMT THEN '' ELSE ',應收付總差額不符' END) AS sNOTE
					FROM (
						SELECT BIZDATE, CLEARINGPHASE,
						COALESCE(SUM(RECVCNT),0) AS RECVCNT,COALESCE(SUM(RECVAMT),0) AS RECVAMT,COALESCE(SUM(PAYCNT),0) AS PAYCNT,COALESCE(-SUM(PAYAMT),0) AS PAYAMT,
						SUM(RVSRECVCNT) AS RVSRECVCNT,SUM(RVSRECVAMT) AS RVSRECVAMT,SUM(RVSPAYCNT) AS RVSPAYCNT,-SUM(RVSPAYAMT) AS RVSPAYAMT,
						(SUM(RECVAMT)+SUM(PAYAMT)+SUM(RVSRECVAMT)+SUM(RVSPAYAMT)) AS BALANCEAMT
						FROM EACHUSER.RPONCLEARINGTAB
						WHERE BIZDATE = iBIZDATE AND CLEARINGPHASE = iCLEARINGPHASE
						GROUP BY BIZDATE, CLEARINGPHASE
					) AS A, (
						SELECT BIZDATE, CLEARINGPHASE,
						SUM(RECVCNT) AS RECVCNT,SUM(RECVAMT) AS RECVAMT,SUM(PAYCNT) AS PAYCNT,SUM(PAYAMT) AS PAYAMT,
						SUM(RVSRECVCNT) AS RVSRECVCNT,SUM(RVSRECVAMT) AS RVSRECVAMT,SUM(RVSPAYCNT) AS RVSPAYCNT,SUM(RVSPAYAMT) AS RVSPAYAMT,
						SUM(BALANCEAMT) AS BALANCEAMT
						FROM EACHUSER.BHCLEARINGTAB
						WHERE BIZDATE = iBIZDATE AND CLEARINGPHASE = iCLEARINGPHASE
						GROUP BY BIZDATE, CLEARINGPHASE
					) AS B
				);
				IF LENGTH(vERROR_RTN) <> 0 THEN
					SET vERROR_RTN = '@' || vERROR_RTN;
				END IF;
			END IF;
		END IF;
		
		
		IF iBATCH_PROC_NAME = 'BAT_RPCLEARFEETAB' THEN
			SET sNOTE = COALESCE((
				SELECT '總筆數:' || COUNT(*) || ';應收付手續費總金額:' || SUM(AMT) || ';沖正應收付手續費總金額:' || SUM(RVSAMT)
				FROM EACHUSER.RPCLEARFEETAB
				WHERE BIZDATE = iBIZDATE AND CLEARINGPHASE = iCLEARINGPHASE
			),'總筆數:0');
			
			OPEN C4;
			FETCH FROM C4 INTO vBANKID, vAMT, vRVSAMT;
			WHILE EOF = 0 DO
				SET vTEMP4 = (
					SELECT
					(CASE WHEN SUM(AMT) = vAMT THEN '' ELSE '應收付手續費總金額不符' END) ||
					(CASE WHEN SUM(RVSAMT) = vRVSAMT THEN '' ELSE ',沖正應收付手續費總金額不符' END) AS sNOTE
					FROM EACHUSER.RPCLEARFEETAB
					WHERE BIZDATE = iBIZDATE AND CLEARINGPHASE = iCLEARINGPHASE
					AND BGBK_ID = vBANKID
					GROUP BY BIZDATE, CLEARINGPHASE, BGBK_ID
				);
				IF LENGTH(vTEMP4) <> 0 THEN
					SET vERROR_RTN = vERROR_RTN || vBANKID || ':' || vTEMP4 || ';';
				END IF;
				FETCH FROM C4 INTO vBANKID, vAMT, vRVSAMT;
			END WHILE;
			CLOSE C4;
			
			IF LENGTH(vERROR_RTN) = 0 THEN
				SET vERROR_RTN = (
					SELECT
					(CASE WHEN COALESCE(SUM(A.AMT),0) = COALESCE(SUM(B.AMT),0) THEN '' ELSE '應收付手續費總金額不符' END) ||
					(CASE WHEN COALESCE(SUM(A.RVSAMT),0) = COALESCE(SUM(B.RVSAMT),0) THEN '' ELSE ',沖正應收付手續費總金額不符' END) AS sNOTE
					FROM (
						SELECT SUM(AMT) AS AMT, SUM(RVSAMT) AS RVSAMT
						FROM EACHUSER.RPCLEARFEETAB
						WHERE BIZDATE = iBIZDATE AND CLEARINGPHASE = iCLEARINGPHASE
						GROUP BY BIZDATE, CLEARINGPHASE, BGBK_ID
					) AS A, (
						SELECT
						(SUM(RECVMBFEEAMT) - SUM(PAYMBFEEAMT) - SUM(PAYEACHFEEAMT)) AS AMT,
						(SUM(RVSRECVMBFEEAMT) - SUM(RVSPAYMBFEEAMT) + SUM(RVSRECVEACHFEEAMT)) AS RVSAMT
						FROM EACHUSER.BHCLEARINGTAB
						WHERE BIZDATE = iBIZDATE AND CLEARINGPHASE = iCLEARINGPHASE
						GROUP BY BIZDATE, CLEARINGPHASE, BANKID
					) AS B
				);
				IF LENGTH(vERROR_RTN) <> 0 THEN
					SET vERROR_RTN = '@' || vERROR_RTN;
				END IF;
			END IF;			
		END IF;
		
		
		IF iBATCH_PROC_NAME = 'BAT_RPDAILYSUM' THEN
			SET sNOTE = '總筆數:' || COALESCE((SELECT SUM(CNT) FROM EACHUSER.RPDAILYSUMTAB WHERE BIZDATE = iBIZDATE AND CLEARINGPHASE = iCLEARINGPHASE AND OP_TYPE = 'S'),0);
			
			OPEN C5;
			FETCH FROM C5 INTO vBANKID, vTEMP1, vTEMP2, vTEMP3;
			WHILE EOF = 0 DO
				SET vTEMP4 = (
					SELECT
					(CASE COALESCE((SELECT SUM(CNT) FROM EACHUSER.RPDAILYSUMTAB AS B WHERE B.BIZDATE = A.BIZDATE AND B.CLEARINGPHASE = A.CLEARINGPHASE AND B.OP_TYPE = A.OP_TYPE AND B.OPBK_ID = A.OPBK_ID AND RESULTSTATUS = 'A'),0) WHEN vTEMP1 THEN '' ELSE '成功筆數不符!' END) ||
					(CASE COALESCE((SELECT SUM(CNT) FROM EACHUSER.RPDAILYSUMTAB AS B WHERE B.BIZDATE = A.BIZDATE AND B.CLEARINGPHASE = A.CLEARINGPHASE AND B.OP_TYPE = A.OP_TYPE AND B.OPBK_ID = A.OPBK_ID AND RESULTSTATUS = 'R'),0) WHEN vTEMP2 THEN '' ELSE '失敗筆數不符!' END) ||
					(CASE COALESCE((SELECT SUM(CNT) FROM EACHUSER.RPDAILYSUMTAB AS B WHERE B.BIZDATE = A.BIZDATE AND B.CLEARINGPHASE = A.CLEARINGPHASE AND B.OP_TYPE = A.OP_TYPE AND B.OPBK_ID = A.OPBK_ID AND RESULTSTATUS = 'P'),0) WHEN vTEMP3 THEN '' ELSE '未完成筆數不符' END) AS sNOTE
					FROM EACHUSER.RPDAILYSUMTAB AS A
					WHERE A.BIZDATE = iBIZDATE AND A.CLEARINGPHASE = iCLEARINGPHASE AND A.OP_TYPE = 'S'
					AND A.OPBK_ID = vBANKID
					GROUP BY A.BIZDATE, A.CLEARINGPHASE, A.OP_TYPE, A.OPBK_ID
				);
				IF LENGTH(vTEMP4) <> 0 THEN
					SET vERROR_RTN = vERROR_RTN || vBANKID || ':' || vTEMP4 || ';';
				END IF;
				FETCH FROM C5 INTO vBANKID, vTEMP1, vTEMP2, vTEMP3;
			END WHILE;
			CLOSE C5;
			
			IF LENGTH(vERROR_RTN) = 0 THEN
				SET vERROR_RTN = (
					SELECT 
					(CASE WHEN A.ONBLOCK_SCNT = B.ONBLOCK_SCNT THEN '' ELSE '成功總筆數不相符!' END) ||
					(CASE WHEN A.ONBLOCK_FCNT = B.ONBLOCK_FCNT THEN '' ELSE '失敗總筆數不相符!' END) ||
					(CASE WHEN A.PENDING_CNT = B.PENDING_CNT THEN '' ELSE '未完成總筆數不相符!' END) AS sNOTE
					FROM (
						SELECT
						COALESCE((SELECT SUM(CNT) FROM EACHUSER.RPDAILYSUMTAB AS B WHERE B.BIZDATE = A.BIZDATE AND B.CLEARINGPHASE = A.CLEARINGPHASE AND B.OP_TYPE = A.OP_TYPE AND RESULTSTATUS = 'A'),0) AS ONBLOCK_SCNT,
						COALESCE((SELECT SUM(CNT) FROM EACHUSER.RPDAILYSUMTAB AS B WHERE B.BIZDATE = A.BIZDATE AND B.CLEARINGPHASE = A.CLEARINGPHASE AND B.OP_TYPE = A.OP_TYPE AND RESULTSTATUS = 'R'),0) AS ONBLOCK_FCNT,
						COALESCE((SELECT SUM(CNT) FROM EACHUSER.RPDAILYSUMTAB AS B WHERE B.BIZDATE = A.BIZDATE AND B.CLEARINGPHASE = A.CLEARINGPHASE AND B.OP_TYPE = A.OP_TYPE AND RESULTSTATUS = 'P'),0) AS PENDING_CNT
						FROM EACHUSER.RPDAILYSUMTAB AS A
						WHERE A.BIZDATE = iBIZDATE AND A.CLEARINGPHASE = iCLEARINGPHASE AND A.OP_TYPE = 'S'
						GROUP BY A.BIZDATE, A.CLEARINGPHASE, A.OP_TYPE
					) AS A, (
						SELECT
						COALESCE(SUM(ONBLOCK_SCNT),0) AS ONBLOCK_SCNT, COALESCE(SUM(ONBLOCK_FCNT),0) AS ONBLOCK_FCNT, COALESCE(SUM(PENDING_CNT),0) AS PENDING_CNT
						FROM EACHUSER.EACH_BATCH_DATA_VALIDATION
						WHERE BIZDATE  = iBIZDATE AND CLEARINGPHASE = iCLEARINGPHASE
					) AS B
				);
				IF LENGTH(vERROR_RTN) <> 0 THEN
					SET vERROR_RTN = '@' || vERROR_RTN;
				END IF;
			END IF;
		END IF;
		
		
		IF iBATCH_PROC_NAME = 'BAT_RPMONTHSUM' THEN
			IF iPROC_STATUS = 'N' THEN
				SET sNOTE = '不執行';
			ELSE
				SET sNOTE = '總筆數:' || COALESCE((SELECT SUM(CNT) FROM EACHUSER.RPMONTHSUMTAB WHERE YYYYMM = '201504' AND OP_TYPE = 'S'),0);
			END IF;
		END IF;		
		
		
		IF LENGTH(vERROR_RTN) > 0 THEN
			UPDATE EACHUSER.EACH_BATCH_STATUS SET
			PROC_STATUS = 'F',
			END_TIME = CURRENT_TIMESTAMP,
			NOTE = vERROR_RTN
			WHERE BIZDATE = iBIZDATE AND CLEARINGPHASE = iCLEARINGPHASE AND BATCH_PROC_NAME = iBATCH_PROC_NAME;		
		ELSE
			UPDATE EACHUSER.EACH_BATCH_STATUS SET
			PROC_STATUS = iPROC_STATUS,
			END_TIME = CURRENT_TIMESTAMP,
			NOTE = sNOTE
			WHERE BIZDATE = iBIZDATE AND CLEARINGPHASE = iCLEARINGPHASE AND BATCH_PROC_NAME = iBATCH_PROC_NAME;
		END IF;
		COMMIT;
	END IF;
END
GO