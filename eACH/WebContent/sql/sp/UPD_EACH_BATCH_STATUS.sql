CREATE PROCEDURE "EACHUSER"."UPD_EACH_BATCH_STATUS"(IN iBIZDATE VARCHAR(10), IN iCLEARINGPHASE VARCHAR(2), IN iBATCH_PROC_NAME VARCHAR(100) ,IN iPROC_STATUS CHAR(1))
	LANGUAGE SQL
BEGIN
	DECLARE EOF INT DEFAULT 0;
	DECLARE sNOTE VARCHAR(300) DEFAULT '';
	DECLARE vBANKID VARCHAR(7);
	DECLARE vONBLOCK_CNT INT;
	DECLARE vPENDING_CNT INT;
	DECLARE vPCODE VARCHAR(4);
	DECLARE vRECVCNT INT;
	DECLARE vRECVAMT BIGINT;
	DECLARE vPAYCNT INT;
	DECLARE vPAYAMT BIGINT;
	DECLARE vRVSRECVCNT INT;
	DECLARE vRVSRECVAMT BIGINT;
	DECLARE vRVSPAYCNT INT;
	DECLARE vRVSPAYAMT BIGINT;
	DECLARE vBALANCEAMT BIGINT;
	DECLARE vAMT DECIMAL(15,2);
	DECLARE vRVSAMT DECIMAL(15,2);
	DECLARE vTEMP1 INT;
	DECLARE vTEMP2 INT;
	DECLARE vTEMP3 INT;
	DECLARE vTEMP4 VARCHAR(300) DEFAULT '';
	DECLARE vTEMP5 VARCHAR(300) DEFAULT '';
	DECLARE vTEMP6 VARCHAR(300) DEFAULT '';
	DECLARE vERROR_RTN VARCHAR(4000) DEFAULT '';
	DECLARE C1 CURSOR FOR (SELECT VARCHAR(BANKID) AS BANKID, (COALESCE(ONBLOCK_SCNT,0)+COALESCE(ONBLOCK_FCNT,0)+COALESCE(PENDING_CNT,0)) AS ONBLOCK_CNT FROM EACHUSER.EACH_BATCH_DATA_VALIDATION WHERE CLEARINGPHASE = iCLEARINGPHASE and BIZDATE = iBIZDATE);
	DECLARE C2 CURSOR FOR (SELECT VARCHAR(BANKID) AS BANKID, COALESCE(PENDING_CNT,0) AS PENDING_CNT FROM EACHUSER.EACH_BATCH_DATA_VALIDATION WHERE CLEARINGPHASE = iCLEARINGPHASE and BIZDATE = iBIZDATE);
	DECLARE C3 CURSOR FOR (SELECT BANKID, PCODE, RECVCNT, RECVAMT, PAYCNT, PAYAMT, RVSRECVCNT, RVSRECVAMT, RVSPAYCNT, RVSPAYAMT, BALANCEAMT FROM BHCLEARINGTAB WHERE BIZDATE = iBIZDATE AND CLEARINGPHASE = iCLEARINGPHASE);
	DECLARE C4 CURSOR FOR (
		SELECT BANKID,
		(SUM(RECVMBFEEAMT) - SUM(PAYMBFEEAMT) - SUM(PAYEACHFEEAMT)) AS AMT,
		(SUM(RVSRECVMBFEEAMT) - SUM(RVSPAYMBFEEAMT) + SUM(RVSRECVEACHFEEAMT)) AS RVSAMT
		FROM BHCLEARINGTAB
		WHERE BIZDATE = iBIZDATE AND CLEARINGPHASE = iCLEARINGPHASE
		GROUP BY BIZDATE, CLEARINGPHASE, BANKID
		ORDER BY BIZDATE, CLEARINGPHASE, BANKID
	);
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET EOF = 1;

    IF iPROC_STATUS = 'P' THEN
		UPDATE EACHUSER.EACH_BATCH_STATUS SET
		PROC_STATUS = iPROC_STATUS,
		BEGIN_TIME = CURRENT_TIMESTAMP,
		NOTE = sNOTE
		WHERE BIZDATE = iBIZDATE AND CLEARINGPHASE = iCLEARINGPHASE and BATCH_PROC_NAME = iBATCH_PROC_NAME;
		COMMIT;
    ELSE
		--圈存扣款檔批次檢核
		IF iBATCH_PROC_NAME = 'BAT_RPONBLOCKTAB' THEN
			SET sNOTE = '總筆數:' || (SELECT COUNT(*) FROM RPONBLOCKTAB WHERE COALESCE(GARBAGEDATA,'') <> '*' AND BIZDATE = iBIZDATE AND CLEARINGPHASE = iCLEARINGPHASE);
			--橫向檢核(依總行)
			OPEN C1;
			FETCH FROM C1 INTO vBANKID, vONBLOCK_CNT;
			WHILE EOF = 0 DO
				SET vTEMP1 = (SELECT COUNT(*) FROM RPONBLOCKTAB WHERE COALESCE(GARBAGEDATA,'') <> '*' AND BIZDATE = iBIZDATE AND CLEARINGPHASE = iCLEARINGPHASE AND (SENDERHEAD = vBANKID OR OUTHEAD = vBANKID OR INHEAD = vBANKID));
				IF NOT(vONBLOCK_CNT = vTEMP1) THEN
					IF LENGTH(vERROR_RTN) = 0 THEN
						SET vERROR_RTN = '@圈存扣款檔筆數不符:;';
					END IF;
					SET vERROR_RTN = vERROR_RTN || vBANKID || ';';
				END IF;
				FETCH FROM C1 INTO vBANKID, vONBLOCK_CNT;
			END WHILE;
			CLOSE C1;
			--縱向檢核(依交易結果A,R,P)
			IF LENGTH(vERROR_RTN) = 0 THEN
				SET vERROR_RTN = (
					SELECT
					(CASE WHEN A.ONBLOCK_SCNT = B.ONBLOCK_SCNT THEN '' ELSE '@成功筆數不符!' END) ||
					(CASE WHEN A.ONBLOCK_FCNT = B.ONBLOCK_FCNT THEN '' ELSE '@失敗筆數不符!' END) ||
					(CASE WHEN A.PENDING_CNT = B.PENDING_CNT THEN '' ELSE '@未完成筆數不符!' END) AS sNOTE
					FROM (
						SELECT SUM(ONBLOCK_SCNT) AS ONBLOCK_SCNT, SUM(ONBLOCK_FCNT) AS ONBLOCK_FCNT, SUM(PENDING_CNT) AS PENDING_CNT
						FROM (
							SELECT
							(SELECT COUNT(*) FROM RPONBLOCKTAB AS B WHERE COALESCE(GARBAGEDATA, '') <> '*' AND B.BIZDATE = T.BIZDATE AND B.CLEARINGPHASE = T.CLEARINGPHASE AND (B.SENDERHEAD = T.BANKID OR B.OUTHEAD = T.BANKID OR B.INHEAD = T.BANKID) AND B.RESULTSTATUS = 'A') AS ONBLOCK_SCNT,
							(SELECT COUNT(*) FROM RPONBLOCKTAB AS B WHERE COALESCE(GARBAGEDATA, '') <> '*' AND B.BIZDATE = T.BIZDATE AND B.CLEARINGPHASE = T.CLEARINGPHASE AND (B.SENDERHEAD = T.BANKID OR B.OUTHEAD = T.BANKID OR B.INHEAD = T.BANKID) AND (B.RESULTSTATUS = 'R' OR (B.RESULTSTATUS = 'P' AND SENDERSTATUS = '1'))) AS ONBLOCK_FCNT,
							(SELECT COUNT(*) FROM RPONBLOCKTAB AS B WHERE COALESCE(GARBAGEDATA, '') <> '*' AND SENDERSTATUS <> '1' AND B.BIZDATE = T.BIZDATE AND B.CLEARINGPHASE = T.CLEARINGPHASE AND (B.SENDERHEAD = T.BANKID OR B.OUTHEAD = T.BANKID OR B.INHEAD = T.BANKID) AND B.RESULTSTATUS = 'P') AS PENDING_CNT
							FROM (
								SELECT BIZDATE, CLEARINGPHASE, SENDERHEAD AS BANKID
								FROM RPONBLOCKTAB
								WHERE COALESCE(GARBAGEDATA, '') <> '*'
								AND BIZDATE = iBIZDATE AND CLEARINGPHASE = iCLEARINGPHASE
								UNION
								SELECT BIZDATE, CLEARINGPHASE, OUTHEAD
								FROM RPONBLOCKTAB
								WHERE COALESCE(GARBAGEDATA, '') <> '*'
								AND BIZDATE = iBIZDATE AND CLEARINGPHASE = iCLEARINGPHASE
								UNION
								SELECT BIZDATE, CLEARINGPHASE, INHEAD
								FROM RPONBLOCKTAB
								WHERE COALESCE(GARBAGEDATA, '') <> '*'
								AND BIZDATE = iBIZDATE AND CLEARINGPHASE = iCLEARINGPHASE
							) AS T
						)
					) AS A, (
						SELECT SUM(ONBLOCK_SCNT) AS ONBLOCK_SCNT, SUM(ONBLOCK_FCNT) AS ONBLOCK_FCNT, SUM(PENDING_CNT) AS PENDING_CNT
						FROM EACH_BATCH_DATA_VALIDATION
						WHERE BIZDATE = iBIZDATE AND CLEARINGPHASE = iCLEARINGPHASE
						GROUP BY BIZDATE, CLEARINGPHASE
					) AS B
				);
			END IF;			
		END IF;
		
		--未完成檔批次檢核
		IF iBATCH_PROC_NAME = 'BAT_RPONPENDINGTAB' THEN
			SET sNOTE = '總筆數:' || (SELECT COUNT(*) FROM RPONPENDINGTAB WHERE OBIZDATE = iBIZDATE AND OCLEARINGPHASE = iCLEARINGPHASE);
			--橫向檢核(依總行)
			OPEN C2;
			FETCH FROM C2 INTO vBANKID, vPENDING_CNT;
			WHILE EOF = 0 DO
				SET vTEMP1 = (SELECT COUNT(*) FROM RPONPENDINGTAB WHERE OBIZDATE = iBIZDATE AND OCLEARINGPHASE = iCLEARINGPHASE AND (SENDERHEAD = vBANKID OR OUTHEAD = vBANKID OR INHEAD = vBANKID));
				IF NOT(vPENDING_CNT = vTEMP1) THEN
					IF LENGTH(vERROR_RTN) = 0 THEN
						SET vERROR_RTN = '@未完成筆數不符:;';
					END IF;
					SET vERROR_RTN = vERROR_RTN || vBANKID || ';';
				END IF;
				FETCH FROM C2 INTO vBANKID, vPENDING_CNT;
			END WHILE;
			CLOSE C2;
			--縱向檢核(依交易結果P)
			IF LENGTH(vERROR_RTN) = 0 THEN
				SET vERROR_RTN = (
					SELECT (CASE WHEN A.PENDING_CNT = B.PENDING_CNT THEN '' ELSE '@未完成總筆數不符!' END) AS sNOTE
					FROM (
						SELECT SUM(PENDING_CNT) AS PENDING_CNT FROM (
							SELECT (SELECT COUNT(*) FROM RPONPENDINGTAB AS B WHERE B.OBIZDATE = T.OBIZDATE AND B.OCLEARINGPHASE = T.OCLEARINGPHASE AND (B.SENDERHEAD = T.BANKID OR B.OUTHEAD = T.BANKID OR B.INHEAD = T.BANKID)) AS PENDING_CNT
							FROM (
								SELECT OBIZDATE, OCLEARINGPHASE, SENDERHEAD AS BANKID
								FROM RPONPENDINGTAB WHERE OBIZDATE = iBIZDATE AND OCLEARINGPHASE = iCLEARINGPHASE
								UNION
								SELECT OBIZDATE, OCLEARINGPHASE, OUTHEAD AS BANKID
								FROM RPONPENDINGTAB WHERE OBIZDATE = iBIZDATE AND OCLEARINGPHASE = iCLEARINGPHASE
								UNION
								SELECT OBIZDATE, OCLEARINGPHASE, INHEAD AS BANKID
								FROM RPONPENDINGTAB WHERE OBIZDATE = iBIZDATE AND OCLEARINGPHASE = iCLEARINGPHASE
							) AS T
						)
					) AS A, (
						SELECT SUM(PENDING_CNT) AS PENDING_CNT
						FROM EACH_BATCH_DATA_VALIDATION 
						WHERE BIZDATE = iBIZDATE AND CLEARINGPHASE = iCLEARINGPHASE
						GROUP BY BIZDATE, CLEARINGPHASE
					) AS B
				);
			END IF;			
		END IF;
		
		--結算批次檢核 BAT_RPONCLEARINGTAB
		IF iBATCH_PROC_NAME = 'BAT_RPONCLEARINGTAB' THEN
			SET sNOTE = (
				SELECT
				'應收總筆數:' || SUM(RECVCNT) ||
				';應收總金額:' || SUM(RECVAMT) ||
				';應付總筆數:' || SUM(PAYCNT) ||
				';應付總金額:' || SUM(PAYAMT) ||
				';應收沖正總筆數:' || SUM(RVSRECVCNT) ||
				';應收沖正總金額:' || SUM(RVSRECVAMT) ||
				';應付沖正總筆數:' || SUM(RVSPAYCNT) ||
				';應付沖正總金額:' || SUM(RVSPAYAMT)
				FROM RPONCLEARINGTAB 
				WHERE BIZDATE = iBIZDATE AND CLEARINGPHASE = iCLEARINGPHASE
			);
			--橫向檢核(依總行、交易類別)
			OPEN C3;
			FETCH FROM C3 INTO vBANKID, vPCODE, vRECVCNT, vRECVAMT, vPAYCNT, vPAYAMT, vRVSRECVCNT, vRVSRECVAMT, vRVSPAYCNT, vRVSPAYAMT, vBALANCEAMT;
			WHILE EOF = 0 DO
				SET (vTEMP4, vTEMP5) = (
					SELECT BGBK_ID AS BANKID,
					(CASE SUM(COALESCE(RECVCNT,0)) WHEN vRECVCNT THEN '' ELSE '應收筆數不符' END) ||
					(CASE SUM(COALESCE(RECVAMT,0)) WHEN vRECVAMT THEN '' ELSE ',應收金額不符' END) ||
					(CASE SUM(COALESCE(PAYCNT,0)) WHEN vPAYCNT THEN '' ELSE ',應付筆數不符' END) ||
					(CASE -SUM(COALESCE(PAYAMT,0)) WHEN vPAYAMT THEN '' ELSE ',應付金額不符' END) ||
					(CASE SUM(COALESCE(RVSRECVCNT,0)) WHEN vRVSRECVCNT THEN '' ELSE ',沖正應收筆數不符' END) ||
					(CASE SUM(COALESCE(RVSRECVAMT,0)) WHEN vRVSRECVAMT THEN '' ELSE ',沖正應收金額不符' END) ||
					(CASE SUM(COALESCE(RVSPAYCNT,0)) WHEN vRVSPAYCNT THEN '' ELSE ',沖正應付筆數不符' END) ||
					(CASE -SUM(COALESCE(RVSPAYAMT,0)) WHEN vRVSPAYAMT THEN '' ELSE ',沖正應付金額不符' END) ||
					(CASE (SUM(RECVAMT)+SUM(RVSRECVAMT)+SUM(PAYAMT)+SUM(RVSPAYAMT)) WHEN vBALANCEAMT THEN '' ELSE ',應收付差額不符' END) AS sNOTE
					FROM RPONCLEARINGTAB
					WHERE BIZDATE = iBIZDATE AND CLEARINGPHASE = iCLEARINGPHASE
					AND BGBK_ID = vBANKID AND PCODE = vPCODE
					GROUP BY BIZDATE, CLEARINGPHASE, BGBK_ID, PCODE
					ORDER BY BIZDATE, CLEARINGPHASE, BGBK_ID, PCODE
				);
				IF LENGTH(vTEMP5) <> 0 THEN
					SET vERROR_RTN = vERROR_RTN || vTEMP4 || ':' || vTEMP5 || ';';
				END IF;
				FETCH FROM C3 INTO vBANKID, vPCODE, vRECVCNT, vRECVAMT, vPAYCNT, vPAYAMT, vRVSRECVCNT, vRVSRECVAMT, vRVSPAYCNT, vRVSPAYAMT, vBALANCEAMT;
			END WHILE;
			CLOSE C3;
			--縱向檢核(依應收付筆數及金額)
			IF LENGTH(vERROR_RTN) = 0 THEN
				SET vERROR_RTN = (
					SELECT
					(CASE WHEN A.RECVCNT = B.RECVCNT THEN '' ELSE '應收總筆數不符' END) ||
					(CASE WHEN A.RECVAMT = B.RECVAMT THEN '' ELSE ',應收總金額不符' END) ||
					(CASE WHEN A.PAYCNT = B.PAYCNT THEN '' ELSE ',應付總筆數不符' END) ||
					(CASE WHEN A.PAYAMT = B.PAYAMT THEN '' ELSE ',應付總金額不符' END) ||
					(CASE WHEN A.RVSRECVCNT = B.RVSRECVCNT THEN '' ELSE ',沖正應收總筆數不符' END) ||
					(CASE WHEN A.RVSRECVAMT = B.RVSRECVAMT THEN '' ELSE ',沖正應收總金額不符' END) ||
					(CASE WHEN A.RVSPAYCNT = B.RVSPAYCNT THEN '' ELSE ',沖正應付總筆數不符' END) ||
					(CASE WHEN A.RVSPAYAMT = B.RVSPAYAMT THEN '' ELSE ',沖正應付總金額不符' END) ||
					(CASE WHEN A.BALANCEAMT = B.BALANCEAMT THEN '' ELSE ',應收付總差額不符' END) AS sNOTE
					FROM (
						SELECT BIZDATE, CLEARINGPHASE,
						SUM(RECVCNT) AS RECVCNT,SUM(RECVAMT) AS RECVAMT,SUM(PAYCNT) AS PAYCNT,-SUM(PAYAMT) AS PAYAMT,
						SUM(RVSRECVCNT) AS RVSRECVCNT,SUM(RVSRECVAMT) AS RVSRECVAMT,SUM(RVSPAYCNT) AS RVSPAYCNT,-SUM(RVSPAYAMT) AS RVSPAYAMT,
						(SUM(RECVAMT)+SUM(PAYAMT)+SUM(RVSRECVAMT)+SUM(RVSPAYAMT)) AS BALANCEAMT
						FROM RPONCLEARINGTAB
						WHERE BIZDATE = iBIZDATE AND CLEARINGPHASE = iCLEARINGPHASE
						GROUP BY BIZDATE, CLEARINGPHASE
					) AS A, (
						SELECT BIZDATE, CLEARINGPHASE,
						SUM(RECVCNT) AS RECVCNT,SUM(RECVAMT) AS RECVAMT,SUM(PAYCNT) AS PAYCNT,SUM(PAYAMT) AS PAYAMT,
						SUM(RVSRECVCNT) AS RVSRECVCNT,SUM(RVSRECVAMT) AS RVSRECVAMT,SUM(RVSPAYCNT) AS RVSPAYCNT,SUM(RVSPAYAMT) AS RVSPAYAMT,
						SUM(BALANCEAMT) AS BALANCEAMT
						FROM BHCLEARINGTAB
						WHERE BIZDATE = iBIZDATE AND CLEARINGPHASE = iCLEARINGPHASE
						GROUP BY BIZDATE, CLEARINGPHASE
					) AS B
				);
				IF LENGTH(vERROR_RTN) <> 0 THEN
					SET vERROR_RTN = '@' || vERROR_RTN;
				END IF;
			END IF;
		END IF;
		
		--收費資料檔批次檢核 BAT_RPCLEARFEETAB
		IF iBATCH_PROC_NAME = 'BAT_RPCLEARFEETAB' THEN
			SET sNOTE = (
				SELECT '總筆數:' || COUNT(*) || ';應收付手續費總金額:' || SUM(AMT) || ';沖正應收付手續費總金額:' || SUM(RVSAMT)
				FROM RPCLEARFEETAB
				WHERE BIZDATE = iBIZDATE AND CLEARINGPHASE = iCLEARINGPHASE
			);
			--橫向檢核(依總行)
			OPEN C4;
			FETCH FROM C4 INTO vBANKID, vAMT, vRVSAMT;
			WHILE EOF = 0 DO
				SET vTEMP4 = (
					SELECT
					(CASE WHEN SUM(AMT) = vAMT THEN '' ELSE '應收付手續費總金額不符' END) ||
					(CASE WHEN SUM(RVSAMT) = vRVSAMT THEN '' ELSE ',沖正應收付手續費總金額不符' END) AS sNOTE
					FROM RPCLEARFEETAB
					WHERE BIZDATE = iBIZDATE AND CLEARINGPHASE = iCLEARINGPHASE
					AND BGBK_ID = vBANKID
					GROUP BY BIZDATE, CLEARINGPHASE, BGBK_ID
				);
				IF LENGTH(vTEMP4) <> 0 THEN
					SET vERROR_RTN = vERROR_RTN || vBANKID || ':' || vTEMP4 || ';';
				END IF;
				FETCH FROM C4 INTO vBANKID, vAMT, vRVSAMT;
			END WHILE;
			CLOSE C4;
			--縱向檢核
			IF LENGTH(vERROR_RTN) = 0 THEN
				SET vERROR_RTN = (
					SELECT
					(CASE WHEN SUM(A.AMT) = SUM(B.AMT) THEN '' ELSE '應收付手續費總金額不符' END) ||
					(CASE WHEN SUM(A.RVSAMT) = SUM(B.RVSAMT) THEN '' ELSE ',沖正應收付手續費總金額不符' END) AS sNOTE
					FROM (
						SELECT SUM(AMT) AS AMT, SUM(RVSAMT) AS RVSAMT
						FROM RPCLEARFEETAB
						WHERE BIZDATE = iBIZDATE AND CLEARINGPHASE = iCLEARINGPHASE
						GROUP BY BIZDATE, CLEARINGPHASE, BGBK_ID
					) AS A, (
						SELECT
						(SUM(RECVMBFEEAMT) - SUM(PAYMBFEEAMT) - SUM(PAYEACHFEEAMT)) AS AMT,
						(SUM(RVSRECVMBFEEAMT) - SUM(RVSPAYMBFEEAMT) + SUM(RVSRECVEACHFEEAMT)) AS RVSAMT
						FROM BHCLEARINGTAB
						WHERE BIZDATE = iBIZDATE AND CLEARINGPHASE = iCLEARINGPHASE
						GROUP BY BIZDATE, CLEARINGPHASE, BANKID
					) AS B
				);
				IF LENGTH(vERROR_RTN) <> 0 THEN
					SET vERROR_RTN = '@' || vERROR_RTN;
				END IF;
			END IF;			
		END IF;
		
		--日統計批次檢核(僅檢核當日總筆數) BAT_RPDAILYSUM
		IF iBATCH_PROC_NAME = 'BAT_RPDAILYSUM' THEN
			SET sNOTE = '總筆數:' || (SELECT SUM(CNT) FROM RPDAILYSUMTAB WHERE BIZDATE = iBIZDATE AND CLEARINGPHASE = iCLEARINGPHASE AND OP_TYPE = 'S');
		END IF;		
		
		--寫入批次執行結果
		IF LENGTH(vERROR_RTN) > 0 THEN
			UPDATE EACHUSER.EACH_BATCH_STATUS SET
			PROC_STATUS = 'F',
			END_TIME = CURRENT_TIMESTAMP,
			NOTE = vERROR_RTN
			WHERE BIZDATE = iBIZDATE AND CLEARINGPHASE = iCLEARINGPHASE AND BATCH_PROC_NAME = iBATCH_PROC_NAME;		
		ELSE
			UPDATE EACHUSER.EACH_BATCH_STATUS SET
			PROC_STATUS = iPROC_STATUS,
			END_TIME = CURRENT_TIMESTAMP,
			NOTE = sNOTE
			WHERE BIZDATE = iBIZDATE AND CLEARINGPHASE = iCLEARINGPHASE AND BATCH_PROC_NAME = iBATCH_PROC_NAME;
		END IF;
		COMMIT;
	END IF;
END